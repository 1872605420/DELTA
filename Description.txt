更新时间：2021年3月4日
目录
一、变量数组类	1
二、流程控制类	3
三、文本操作类	6
四、计算转换类	12
五、时间日期类	16
六、特殊符号类	17
七、系统处理类	18
八、网络爬虫类	23
九、回复控制类	25
十、DB数据库类	27
十一、 画板制图类	29
十二、 制作动图类	38
十三、 定时任务类	38
十四、 公共函数类	39
十五、 QQ函数类	43
十六、 酷Q函数类	48
十七、 可爱猫函数类	49
十八、 契约函数类	51
十九、 小栗子函数类	51
二十、 先驱函数	54
二十、特别解释	54

前言
1.“{”代表函数的开始,“}”代表函数的结束。{}应成对出现,在输入过程中会以相同的颜色来配对。
2.消息中的“{”会被自动转义为“$zkh”,“}”会被自动转义为“$ykh”,
“’”会被自动转义为“$dyh”；如需让机器人识别消息中的{},请使用反转义。
3.函数英文“,”来分割函数名和各个参数。因此{}内的英文逗号必须用{逗号}来实现。
4.发送消息中的逗号,如需作为函数参数,请使用{转义,}。
5.回复内的手动换行会被自动清除,如果要换行,请使用{换行}。
6.”///”被用来作为注释标志。
7.【>=”预执行代码”=<】“预执行代码”会被预先执行。

一、变量数组类
[变量赋值]
变量分类=变量数组
变量名称=变量赋值(set variable)
变量格式={变量赋值,变量名,变量值}或{setv,变量名,变量值}
变量注释=用来给变量或变量数组赋值，无返回值。
智能输入={setv,,}
变量举例=单个变量赋值{setv,a,1}单个数组成员赋值{setv,a[1],2}多个数组成员赋值{for,3,i,{setv,a[{var,i}],{var,i}}}


[变量]
变量分类=变量数组
变量名称=变量(variable)
变量格式={变量,变量名}或{var,变量名}
变量注释=用来获取变量值,返回变量值。如果未赋值,直接使用,则默认赋值为空。
智能输入={var,}
变量举例={var,a}{setv,a,4}{var,a}返回：4
内置变量：fromQQ、fromGroup、msgID、QQID、type、msg、反馈、类型、match、reply、key，请勿使用这些变量名命名变量，以免产生意外。

[全局赋值]
变量分类=变量数组
变量名称=全局赋值(set Global variable)
变量格式={全局赋值,全局变量名,全局变量值}或{setg,全局变量名,全局变量值}
变量注释=用来给全局变量赋值或全局变量数组赋值,无返回值。全局变量一经赋值，任何地方均可直接调用。
智能输入={setg,,}
变量举例={setg,呵呵,123}{gvar,呵呵}返回：123

[全局变量]
变量分类=变量数组
变量名称=全局变量(Global variable)
变量格式={全局变量,变量值}或{gvar,变量值}
变量注释=用来获取全局变量值。如果未赋值,直接使用,则默认赋值为空。
智能输入={gvar,}
变量举例={setg,呵呵,123}{gvar,呵呵}返回：123

[删除变量]
变量分类=变量数组
变量名称=删除变量
变量格式={删除变量,变量名}
变量注释=删除该变量。局部变量会自动释放，全局变量则只在重启框架后释放。
智能输入={删除变量,}

[清空全局变量]
变量分类=变量数组
变量名称=清空全局变量
变量格式={清空全局变量}
变量注释=清空所有全局变量。
智能输入={清空全局变量}

[数组成员数]
变量分类=变量数组
变量名称=数组成员数(len)
变量格式={数组成员数,数组名}或{len,数组名}
变量注释=用来获取数组的成员个数,返回数组成员数。{setv,保存数组[100],0}{len,保存数组}这样返回为0,因为数组定义从1开始,即从保存数组[1]开始。
智能输入={len,}
变量举例={for,3,i,{setv,测试数组[{var,i}],{var,i}}}{len,测试数组}返回:3

[清除数组]
变量分类=变量数组
变量名称=清除数组
变量格式={清除数组,数组名}
变量注释=删除指定数组变量中的所有成员。
智能输入={清除数组,}

[数组排序]
变量分类=变量数组
变量名称=数组排序(sorted)
变量格式={数组排序,数组1|数组2|……,排序方式}或{sorted,数组1|数组2|……,排序方式}
变量注释=用来对指定单个或多个数组进行排序。多个数组排序时，按数组1的“升序”或“降序”进行排序,无返回值。
智能输入={sorted,,}
变量举例=单个数组排序：{for,3,i,{setv,a[{var,i}],{var,i}}}{for,3,i,{var,a[{var,i}]}}
{sorted,a,降序}{for,3,i,{var,a[{var,i}]}}返回：123321多个数组排序：{setv,a[1],3}{setv,a[2],1}{setv,a[3],5}{setv,b[1],5}{setv,b[2],7}{setv,b[3],4}{sorted,a|b,升序}{for,3,i,{var,a[{var,i}]}{var,b[{var,i}]}  }返回：17  35  54  。

[加入成员]
变量分类=变量数组
变量名称=加入成员
变量格式={加入成员,数组名称,成员数据}
变量注释=将数据加入到指定数组变量的尾部。
智能输入={加入成员,,}
变量举例={for,10,i,{加入成员,a,{var,i}}}{len,a}返回：10。{加入成员,a,233}{var,a[1]}返回：233。

[删除成员]
变量分类=变量数组
变量名称=删除成员
变量格式={删除成员,数组名称,删除位置,删除数目}
变量注释=删除指定数组变量中的成员。“删除位置”位置值从 1 开始，如果小于 1 或大于数组名称所指定数组变量的成员数目，将不会删除任何数据。“删除数目”可空，默认为 1，只删除指定位置的一个成员。
智能输入={删除成员,,}
变量举例={加入成员,a,1}{加入成员,a,2}{加入成员,a,3}{len,a}{var,a[2]}  {删除成员,a,2}{len,a}{var,a[2]}返回：32  23。{for,6,i,{加入成员,a,{var,i}}}{删除成员,a,2,3}{for,{len,a},i,{var,a[{var,i}]}}返回：156。

[宏定义]
变量分类=变量数组
变量名称=宏定义
变量格式={宏定义,标识符,字符串}
变量注释=将用指定标识符代替指定字符串。“初始化”事件中，请直接使用{宏定义,M,123}，所有关键词回复内容中的M将被123替换。其它事件中，请使用【>={宏定义,N,{now}}=<】，则该回复中的N将被{now}替换。
智能输入={宏定义,,}

二、流程控制类
[如果]
变量分类=流程控制
变量名称=如果(ife)
变量格式={如果,判断条件,条件成立执行语句,条件不成立执行语句}或{ife,判断条件,条件成立执行语句,条件不成立执行语句}
变量注释=用于选择性执行，条件成立返回条件成立执行语句；条件不成立返回条件不成立执行语句。逻辑判断符号可以为：>,<,>=,<=,==(等于),!=(不等于)。判断条件中的文本变量请用单引号包含。支持多条件判断：and、or、not。逻辑非(not)后的条件需要加括号。
智能输入={ife,,,}
变量举例={setv,a,1}{ife,{var,a}<2,3,4}返回：3。{setv,a,你好}{ife,'{var,a}'=='你好',你好啊,我不好}返回：你好啊。

[如果真]
变量分类=流程控制
变量名称=如果真(if)
变量格式={if,判断条件,执行语句}或{如果真,判断条件,执行语句}
变量注释=用于条件成立时执行；逻辑判断符号可以为：>,<,>=,<=,==,!=(不等于)；条件成立返回执行语句；条件不成立无返回值。判断条件中的文本变量请用单引号包含。支持多条件判断：and、or、not。逻辑非(not)后的条件需要加括号。
智能输入={if,,}
变量举例={if,2>1 and 3<4 or not (2>5),3}返回：3  {if,’{var,hh}’==’好啊’,你好啊}  {if,’{var,hh}’==’’,空值}

[判断]
变量分类=流程控制
变量名称=判断(switch)
变量格式={switch,条件1,语句1,条件2,语句2,……}或{判断,条件1,语句1,条件2,语句2,……}
变量注释=用于多分支的选择。当条件语句为假时,转到下一个条件语句；当条件语句为真时,执行该条件的语句后跳出判断。
智能输入={switch,,}
变量举例={switch,2>1,第一个,3>2,第二个}返回：第一个。

[返回]
变量分类=流程控制
变量名称=返回(return)
变量格式={返回}或{return}
变量注释=结束后续语句的执行,返回前面的执行结果。{return}可终止整个程序的执行。
智能输入={return}
变量举例=你{return}好,返回：你。{if,{QQ}!=1318377582,{群消息,只有主人才能使用此功能}{return}}

[计次循环]
变量分类=流程控制
变量名称=计次循环(for)
变量格式={计次循环,循环次数,循环变量,循环语句}或{for,循环次数,循环变量,循环语句}
变量注释=将循环语句执行多次,循环变量的值从1开始会随着循环每次自增1，循环变量也可省略，返回执行语句的结果。
智能输入={for,,,}
变量举例={for,3,i,{var,i}}返回：123。{for,3,,很好啊}返回：很好啊很好啊很好啊。{for,9,i,{for,{var,i},j,{var,i}*{var,j}={eva,{var,j}*{var,i}}  }{换行}}可实现九九乘法表。

[判断循环]
变量分类=流程控制
变量名称=判断循环(while)
变量格式={判断循环,循环条件,循环语句}或{while,循环条件,循环语句}
变量注释=循环条件满足时执行循环语句。使用错误将导致死循环。
智能输入={while,,}
变量举例={setv,次数,1}{while,{var,次数}<3,{var,次数}{setv,次数,{eva,{var,次数}+1}}}返回：12。

[跳出循环]
变量分类=流程控制
变量名称=跳出循环(break)
变量格式={跳出循环}或{break}
变量注释=用于跳出当前循环的执行,无返回值。
智能输入={break}
变量举例={for,4,i,{if,{var,i}==3,{break}}{var,i}}返回：12。

[到循环尾]
变量分类=流程控制
变量名称=到循环尾(continue)
变量格式={跳出循环}或{break}
变量注释=用于跳出本次循环的后续执行,开始下一次循环,无返回值。
智能输入={continue}
变量举例={for,4,i,前{if,{var,i}==3,{continue}}{var,i}后}返回：124。

[多项选择]
变量分类=流程控制
变量名称=多项选择(choose)
变量格式={多项选择,索引值,待选择项数据1,待选择项数据2,……}或{choose,索引值,待选择项数据1,待选择项数据2,……}
变量注释=从参数列表项目中选择并返回一个值。命令会根据索引值来返回选择项列表中的某个值。如果索引值是 1，则命令会返回列表中的第 1 个选择项。如果索引值是 2，则会返回列表中的第 2 个选择项，以此类推。如果索引值小于 1 或者大于最大可选择项，将会产生运行错误。
智能输入={choose,,}
变量举例={choose,2,1,2,3,4,5}返回：2。{choose,{取随机数,1,5},1,2,3,4,5}。

[选择]
变量分类=流程控制
变量名称=选择(iif)
变量格式={选择,用作选择的逻辑值,待选择项一,待选择项二}或{iif,用作选择的逻辑值,待选择项一,待选择项二}
变量注释=根据所提供逻辑值，返回两部分中的其中一个。如果该值为真，将返回第一个待选择项，否则将返回第二个待选择项。
智能输入={iif,,,}
变量举例={iif,1>2,3,4}返回：4。{iif,1<2,3,4}返回：3。

三、文本操作类
[文本取中间]
变量分类=文本操作
变量名称=文本取中间(mid)
变量格式={文本取中间,原文本,前面文本,后面文本}或{mid,原文本,前面文本,后面文本}
变量注释=用于获得指定文本的中间部分，返回取到的文本。
智能输入={mid,,,}
变量举例={mid,你好啊,你,啊}返回：好。

[文本_取中间]
变量分类=文本操作
变量名称=文本_取中间
变量格式={文本_取中间,原文本,起始取出位置,欲取出字符的数目}
变量注释=取出指定文本中从指定位置算起指定数量的字符。
智能输入={文本_取中间,,,}
变量举例={文本_取中间,你好啊,3,2}返回:好。{文本_取中间,abc,2,1}返回:b。

[文本取中间批量]
变量分类=文本操作
变量名称=文本取中间批量
变量格式={文本取中间批量,源文本,前面标识文本,后面标识文本,保存数组名称}
变量注释=用于批量取出文本中间,返回取到的数组成员数量。
智能输入={文本取中间批量,,,,}
变量举例={文本取中间批量,a110b；a120b；,a,b；,数组}  {var,数组[1]}{var,数组[2]}返回：2  110120

[文本取左边]
变量分类=文本操作
变量名称=文本取左边(left)
变量格式={文本取左边,原文本,后面文本}或{left,原文本,后面文本}
变量注释=用于获得指定文本的左边部分,返回取到的文本。
智能输入={left,,}
变量举例={left,好的,的}返回:好。

[文本_取左边]
变量分类=文本操作
变量名称=文本_取左边
变量格式={文本_取左边,原文本,欲取出字符的数目}
变量注释=取出指定文本中从左边算起指定数量的字符。一个汉字是2个字符，一个英文字母是1个字符。
智能输入={文本取左边,,}
变量举例={文本_取左边,你好,2}返回:你。{文本_取左边,abc,2}返回:ab。

[文本取右边]
变量分类=文本操作
变量名称=文本取右边(right)
变量格式={文本取右边,原文本,前面文本}或{right,原文本,前面文本}
变量注释=用于获得指定文本的右边部分,返回取到的文本。
智能输入={right,,}
变量举例={right,好的,好}返回:的。

[文本_取右边]
变量分类=文本操作
变量名称=文本_取右边
变量格式={文本_取右边,原文本,欲取出字符的数目}
变量注释=取出指定文本中从右边算起指定数量的字符。
智能输入={文本_取右边,,}
变量举例={文本_取右边,你好,2}返回:好。{文本_取右边,abc,2}返回:bc。

[文本取长度]
变量分类=文本操作
变量名称=文本取长度
变量格式={文本取长度,文本}
变量注释=用于获得指定文本的长度,英文占1个长度中文占2个长度,返回取到的文本长度。
智能输入={文本取长度,}
变量举例={文本取长度,123}返回:3。{文本取长度,你好}返回:4。

[文本分割]
变量分类=文本操作
变量名称=文本分割(split)
变量格式={文本分割,源文本,分隔符,保存数组}或{split,源文本,分隔符,保存数组}。
变量注释=将文本按指定分隔符进行分割,分割文本保存在指定数组中,返回分割后的文本数组成员个数。
智能输入={split,,,}
变量举例={split,今|天|很|开|心,|,保存文本}返回：5。{for,{split,今 天 很 开 心, ,保存文本},i,文本{var,i}为：{var,保存文本[{var,i}]}；}返回：文本1为：今；文本2为：天；文本3为：很；文本4为：开；文本5为：心；。

[逐字分割]
变量分类=文本操作
变量名称=逐字分割
变量格式={逐字分割,源文本,保存数组}
变量注释=将文本逐字进行分割,分割文本保存在指定数组中,返回分割后的文本数组成员个数。源文本中有空格,空格将不会被分割出来。
智能输入={逐字分割,,}
变量举例={for,{逐字分割,今天很开心,分割文本},i,{var,分割文本[{var,i}]}；}返回：今；天；很；开；心；。

[文本判含]
变量分类=文本操作
变量名称=文本判含
变量格式={文本判含,被判断文本,被包含文本,包含返回文本,不包含返回文本}。
变量注释=用于判断是否存在指定文本,返回“包含返回文本”或者“不包含返回文本”。若想判断多个被包含文本,用|分割,则这些被包含文本只要有一个被包含即被认为是被包含。若将被包含文本用&分割,则这些被包含文本必须全部被包含才被认为是被包含。
智能输入={文本判含,,,,}
变量举例={文本判含,你好啊,你|好,有,没有}返回：有。{文本判含,你好啊,你&的,有,没有}返回：没有。

[寻找文本]
变量分类=文本操作
变量名称=寻找文本
变量格式={寻找文本,被搜寻文本,欲寻找文本,起始搜寻位置,是否不区分大小写}。
变量注释=返回一个整数值，指定一文本在另一文本中最先出现的位置，位置值从 1 开始。如果未找到，返回-1。“起始搜寻位置”位置值从 1 开始。如果本参数被省略，默认为 1 。“是否不区分大小写”初始值为“假”。为真不区分大小写，为假区分。
智能输入={寻找文本,,}
变量举例={寻找文本,1234,2}返回：2。{寻找文本,1234,5}返回：-1。

[文本替换]
变量分类=文本操作
变量名称=文本替换
变量格式={文本替换,欲被替换的文本,欲被替换的子文本,用作替换的子文本}或{replace,欲被替换的文本,欲被替换的子文本,用作替换的子文本}。
变量注释=用于替换指定文本中的部分文本,返回替换后的文本。用作替换的子文本为空,即为删除欲被替换的子文本。
智能输入={replace,,,}
变量举例={replace,你好啊,好,的}返回：你的啊。{replace,你好啊,好}或{replace,你好啊,好,}返回：你啊。

[文本替换批量]
变量分类=文本操作
变量名称=文本替换批量
变量格式={文本替换批量,欲被替换的文本,欲被替换的子文本1,用作替换的子文本1,欲被替换的子文本2,用作替换的子文本2,欲被替换的子文本3,用作替换的子文本3,欲被替换的子文本4,用作替换的子文本4,欲被替换的子文本5,用作替换的子文本5}。
变量注释=用于批量替换指定文本中的部分文本,返回替换后的文本。最多支持替换5组。
智能输入={文本替换批量,,,}
变量举例={文本替换批量,你好啊,你,我,好,们,啊,好}  把“你好啊”中的“你”替换为“我”，“好”替换为“们”,“啊”替换为“好”  返回：我们好。{文本替换批量,你好啊,好,,} 返回：你啊。

[写配置项]
变量分类=文本操作
变量名称=写配置项
变量格式={写配置项,配置文件名,节名称,项名称,写入值}。
变量注释=将指定文本内容写入指定配置项中或者删除指定的配置项或节。配置文件可以是ini或txt。如果指定配置文件不存在,将会自动创建。如果项名称参数值被省略,则删除指定节及其下的所有配置项。如果写入值参数值被省略,则删除所指定配置项。
智能输入={写配置项,,,,}
变量举例={写配置项,C:\Users\Administrator\Desktop\你好.ini,1,2,3}。{写配置项,C:\Users\Administrator\Desktop\你好.ini,1}。{写配置项,C:\Users\Administrator\Desktop\你好.ini,1,2}。

[读配置项]
变量分类=文本操作
变量名称=读配置项
变量格式={读配置项,配置文件名,节名称,项名称,不存在时读入值}。
变量注释=读取指定配置文件中指定项目的文本内容,返回读取的配置项数值或不存在时读入值。“不存在时读入值”可省略。如果读入值不存在,并且没有指定读入值,将返回空文本。
智能输入={读配置项,,,,}
变量举例={读配置项,C:\Users\Administrator\Desktop\你好.ini,1,2,5}返回：3。

[取配置节名]
变量分类=文本操作
变量名称=取配置节名
变量格式={取配置节名,配置文件名,保存数组}。
变量注释=获取指定配置文件中所有已有的节名称，保存在指定数组中，返回的节名称数组个数。
智能输入={取配置节名,,}
变量举例={写配置,C:\Users\Administrator\Desktop\你好.ini,1,2,3}{写配置,C:\Users\Administrator\Desktop\你好.ini,4,2,3}{写配置,C:\Users\Administrator\Desktop\你好.ini,5,2,3}{for,{取配置节名,C:\Users\Administrator\Desktop\你好.ini,保存数组},i,{var,保存数组[{var,i}]}}返回：145。

[枚举项]
变量分类=文本操作
变量名称=枚举项
变量格式={枚举项,配置文件名,节名称,项名称数组,项值数组}
变量注释=获取配置文件中指定节下所有项名称和值存放在指定数组中，返回项数目。
智能输入={枚举项,,,,}
变量举例={写配置,C:\Users\Administrator\Desktop\你好.ini,测试,1,11}{写配置,C:\Users\Administrator\Desktop\你好.ini,测试,2,22}{写配置,C:\Users\Administrator\Desktop\你好.ini,测试,3,33}{for,{枚举项,C:\Users\Administrator\Desktop\你好.ini,测试,项名称数组,项值数组},i,项名称：{var,项名称数组[{var,i}]} 项数值：{var,项值数组[{var,i}]} }返回：项名称：1 项数值：11 项名称：2 项数值：22 项名称：3 项数值：33 。

[写文本]
变量分类=文本操作
变量名称=写文本
变量格式={写文本,路径,写入内容,写入模式}
变量注释=在指定路径写入内容,成功返回“真”,失败返回“假”。若文件不存在,会新建文件。“写入模式”：追加，将文本追加在文件文本尾部；重写，将文件文本清空后写入文本；省略写入模式，默认为追加。写出时，会自动将文本内容反转义后写出。
智能输入={写文本,,}
变量举例={写文本,C:\Users\Administrator\Desktop\测试.txt,你好啊}在桌面“测试.txt”中写入文本：“你好啊”,返回：真。{写文本,C:\Users\Administrator\Desktop\测试.txt,你好啊,重写}。
{写文本,C:\Users\Administrator\Desktop\测试.txt,{转义,{now}}}可以真实的写入文本“{now}”。

[读文本]
变量分类=文本操作
变量名称=读文本
变量格式={读文本,路径}
变量注释=读取指定路径文件的全部文本,返回读取的文本。若读入失败,将返回空。若文件不存在,会新建文件。读入时，会自动将文本内容转义后再读取，可自行使用反转义后使用。
智能输入={读文本,}
变量举例={读文本,C:\Users\Administrator\Desktop\测试.txt}返回：你好啊。

[文本插入新一行]
变量分类=文本操作
变量名称=文本插入新一行
变量格式={文本插入新一行,原文本,行数,新一文本行内容}
变量注释=在指定行插入文本，原文本后移，返回插入后的文本。。
智能输入={文本插入新一行,,,}
变量举例={写文本,C:\Users\12761\Desktop\1.txt,{文本插入新一行,{读文本,C:\Users\12761\Desktop\1.txt},3,4},重写}。

[文本取行数]
变量分类=文本操作
变量名称=文本取行数
变量格式={文本取行数,文本}
变量注释=返回指定文本的行数。
智能输入={文本取行数,}
变量举例={文本取行数,{读文本,C:\Users\Administrator\Desktop\测试.txt}}返回：3。

[文本取所在行]
变量分类=文本操作
变量名称=文本取所在行
变量格式={文本取所在行,源文本,欲查找的文本,起始搜寻位置,是否区分大小写}
变量注释=返回指定文本所在的行数。“起始搜寻位置”缺省默认为1，从第一行开始查找。“是否区分大小写”缺省默认为假，不区分大小写。
智能输入={文本取所在行,,}

[文本删空行]
变量分类=文本操作
变量名称=文本删空行
变量格式={文本删空行,文本}
变量注释=删除指定文本中的空白行。
智能输入={文本删空行,}

[文本删行]
变量分类=文本操作
变量名称=文本删行
变量格式={文本删行,文本,指定行}或{删行一行,文本,指定行}。
变量注释=删除指定文本中的指定行。
智能输入={文本删行,,}

[文本取行]
变量分类=文本操作
变量名称=文本取行
变量格式={文本取行,文本,指定行}或{取出一行,文本,指定行}。
变量注释=取出指定文本中的指定行。
智能输入={文本取行,,}

[解密]
变量分类=文本操作
变量名称=解密
变量格式={解密,待解密文本}
变量注释=可将需要保密的文本,使用“加密”对话框进行加密。再使用“解密”来让机器人解析,加密文本不会泄密给其他人。
智能输入={解密,}

[取数字]
变量分类=文本操作
变量名称=取数字
变量格式={取数字,待取文本}
变量注释=取文本中的数字。
智能输入={取数字,}
变量举例={取数字,第12页}返回：12。

[取汉字]
变量分类=文本操作
变量名称=取汉字
变量格式={取汉字,待取文本}
变量注释=取文本中的汉字。
智能输入={取汉字,}
变量举例={取汉字,你1好2啊3}返回：你好啊。

[快速检索]
变量分类=文本操作
变量名称=快速检索
变量格式={快速检索,待检索文本,检索词}
变量注释=快速检索，返回检索结果。“待检索文本”需以换行符分割，最后留一个空行。
智能输入={快速检索,}

[文本查重]
变量分类=文本操作
变量名称=文本查重
变量格式={文本查重,待查重文本,分隔符,数组}
变量注释=文本查重，返回非重文本数目。请使用“数组.文本[1]”获取第一个非重文本，请使用“数组.次数[1]”获取第一个非重文本重复次数。
智能输入={快速检索,}
变量举例={for,{文本查重,你-我-他-你-我-我-你-他-我-他-你-,-,结果},i,{var,结果.文本[{var,i}]}{var,结果.次数[{var,i}]} }  返回：你4 我4 他3 

[删空]
变量分类=文本操作
变量名称=删空
变量格式={删空,待处理文本}
变量注释=处理掉文本中的空格。
智能输入={删空,}
变量举例={删空, 你 好 啊 }返回：你好啊。

[删Tab]
变量分类=文本操作
变量名称=删Tab
变量格式={删Tab,待处理文本}
变量注释=处理掉文本中的Tab。为了便于代码书写，如同换行一样，关键词回复中的tab缩进会被自动清除。所以不能使用{replace,你	好,	,}来清除Tab缩进，只能使用本函数。
智能输入={删Tab,}
变量举例={删Tab,{读文本,C:\Users\12761\Desktop\tab文本.txt}}。

四、计算转换类
[取随机数]
变量分类=计算转换
变量名称=取随机数
变量格式={取随机数,最小值,最大值,随机数种子}
变量注释=返回一个介于最小值与最大值之间的一个随机数。最大值可留空,留空后即为无穷大。随机数种子：为随机数生成器初始化一个种子值,不同的种子值将导致“取随机数”命令返回不同的随机数系列。随机数种子如果为固定的值,将会导致随机数为固定的值。
智能输入={取随机数,,}
变量举例={取随机数,1}返回：28885。{取随机数,1,8}返回：3。{取随机数,1,8,{取随机数,1}}{取随机数,1,8,{取随机数,1}}返回：4。

[取随机字符]
变量分类=计算转换
变量名称=取随机字符
变量格式={取随机字符,个数}
变量注释=返回由A-Z、a-z、0-9随机构成的字符。
智能输入={取随机字符,}
变量举例={取随机字符,6}返回：RK07E7。

[随机值]
变量分类=计算转换
变量名称=随机值
变量格式={随机值,文本1|文本2|……}
变量注释=随机返回用“|”分割的一个内容。
智能输入={随机值,}
变量举例={随机值,你|好|啊}返回：好。

[计算]
变量分类=计算转换
变量名称=计算（calculate）
变量格式={计算,值a,运算符,值b}或{cal,值a,运算符,值b}
变量注释=用于数值计算,结果返回双精度小数。运算符可以为+,-,*,/,\,%,^,其中“\”为整除运算，“%”为取余运算，“^”为乘方运算。
智能输入={cal,,,}
变量举例={cal,5,\,2}返回：2。{cal,5,%,2}返回：1。{cal,5,^,2}返回：25。

[表达式计算]
变量分类=计算转换
变量名称=表达式计算（evaluation）
变量格式={表达式计算,表达式}或{eva,表达式}
变量注释=用于复杂表达式计算,结果返回双精度小数。表达式计算接受括号优先级(括号为英文半角),接受加减乘除优先级,接受取余运算(%)；不接受整除、乘方运算。如需整除、乘方，请使用“计算”函数。
智能输入={eva,}
变量举例={eva,3+4}返回：7。{setv,a,2}{setv,b,3}{eva,{var,a}+{var,b}}返回：5。

[取MD5值]
变量分类=计算转换
变量名称=取MD5值	
变量格式={取MD5值,待取内容,是否为大写,是否为16位}
变量注释=返回指定内容的MD5值。“是否为大写”省略（默认）为“假”为小写。“是否为16位”省略（默认）“假”为32位。
智能输入={取MD5值,}
变量举例={取MD5值,你好啊}返回：d4159f017439c206719a8ad2e6a25233。{取MD5值,你好啊,真}返回：D4159F017439C206719A8AD2E6A25233。{取MD5值,你好啊,真,真}返回：7439C206719A8AD2。

[字节集取MD5]
变量分类=计算转换
变量名称=字节集取MD5	
变量格式={字节集取MD5,字节集变量,是否为大写,是否为16位}
变量注释=返回指定字节集变量的MD5值。“是否为大写”省略（默认）为“假”为小写。“是否为16位”省略（默认）“假”为32位。
智能输入={字节集取MD5,}
变量举例={读入文件,C:\Users\12761\Desktop\测试1.txt,测试可自改}{字节集取MD5,测试可自改}

[编码]
变量分类=计算转换
变量名称=编码
变量格式={编码,欲编码的文本,不编码字母数字,是否UTF8}
变量注释=编码为URL。“不编码字母数字”可空默认为“真”。“是否UTF8”可空默认为“真”,先把文本转换成UTF8编码,再编码成URL。
智能输入={编码,,,}
变量举例={编码,瓜子}返回：%E7%93%9C%E5%AD%90。

[转义]
变量分类=计算转换
变量名称=转义
变量格式={转义,待转义文本,是否先执行后再转义}
变量注释=将“{”转义为“$zkh”,“}”转义为“$ykh”，“,”转义为“$dh”。
智能输入={转义,}
变量举例={转义,{var,hh}} 返回：$zkhvar$dhhh$ykh。{setv,hh,$zkhnow$ykh}{转义,{var,hh},真} 返回：$zkhnow$ykh。

[反转义]
变量分类=计算转换
变量名称=反转义
变量格式={反转义,待反转义文本,是否先执行后再反转义}
变量注释=将“$zkh”反转义为“{”,“$ykh”反转义为“}”，“$dh”转义为“,”。
智能输入={反转义,}
变量举例={反转义,$zkhnow$ykh} 返回：{now}{setv,hh,$zkhnow$ykh}{反转义,{var,hh},真} 返回：{now}。

[时间戳转文本]
变量分类=计算转换
变量名称=时间戳转文本
变量格式={时间戳转文本,待转时间戳}
变量注释=将10位或13位时间戳转为时间(年月日时分秒)
智能输入={时间戳转文本,}
变量举例={时间戳转文本,1562503244},返回：2019年07月07日20时40分44秒。

[文本转时间戳]
变量分类=计算转换
变量名称=文本转时间戳
变量格式={文本转时间戳,待转文本,是否10位时间戳}
变量注释=将指定时间转为时间戳。省略“待转文本”,将使用现行时间。默认生成13为时间戳。
智能输入={文本转时间戳,}
变量举例={文本转时间戳}返回：1574596363000。{文本转时间戳,{now},真}返回：1574596580。

[到整数]
变量分类=计算转换
变量名称=到整数
变量格式={到整数,待转换数字}
变量注释=用于转换整数。
智能输入={到整数,}
变量举例={到整数,1.2}返回：1。

[统计]
变量分类=计算转换
变量名称=统计
变量格式={统计,被搜索文本,欲搜索文本,是否区分大小写}
变量注释=返回指定文本中指定内容出现的次数。“是否区分大小写”可留空，默认为假，不区分大小写。
智能输入={统计,,}
变量举例={统计,aaaAAA,a}返回：6。{统计,aaaAAA,a,假}返回：6。{统计,aaaAAA,a,真}返回：3。

[四舍五入]
变量分类=计算转换
变量名称=四舍五入
变量格式={四舍五入,欲被四舍五入的数值,被舍入的位置}
变量注释=返回按照指定的方式进行四舍五入运算的结果数值。“被舍入的位置”，可以被省略。如果大于0，表示小数点右边应保留的位数；如果等于0，表示舍入到整数；如果小于0，表示小数点左边舍入到的位置。例如：四舍五入 (1056.65, 1) 返回 1056.7； 四舍五入 (1056.65, 0) 返回 1057； 四舍五入 (1056.65, -1) 返回 1060。如果省略本参数，则默认为0。
智能输入={四舍五入,,}
变量举例={四舍五入,1056.65, 1)}返回：1056.7。{四舍五入,1056.65, 0}或{四舍五入,1056.65}返回：1057。

[取绝对值]
变量分类=计算转换
变量名称=取绝对值
变量格式={取绝对值,欲取其绝对值的数值}
变量注释=返回取绝对值的结果。
智能输入={取绝对值,}
变量举例={取绝对值,12)}返回：12。{取绝对值,-12}返回：12。

[宽文本到文本]
变量分类=计算转换
变量名称=宽文本到文本
变量格式={宽文本到文本,待转换文本}
变量注释=用于宽文本到文本。宽文本格式为java编码格式。在此编码格式中，ASCII外的宽字符将通过 “\u” + 4位十六进制文本 进行转义。能够通过常规的文本类型做文本处理操作。例如“中国”转换为宽文本后：\u4e2d\u56fd。
智能输入={宽文本到文本,}
变量举例={宽文本到文本,\u897f\u5b89}返回：西安。

[到文本]
变量分类=计算转换
变量名称=到文本
变量格式={到文本,字节集变量}
变量注释=用于字节集变量转为文本。
智能输入={到文本,}

[到字节集]
变量分类=计算转换
变量名称=到字节集
变量格式={到字节集,待转文本,字节集变量}
变量注释=用于文本转为字节集变量。
智能输入={到字节集,,}

[拼接字节集]
变量分类=计算转换
变量名称=拼接字节集
变量格式={拼接字节集,保存字节集变量,字节集变量1,字节集变量2,……}
变量注释=用于拼接字节集。
智能输入={拼接字节集,,}

[URL解码]
变量分类=计算转换
变量名称=URL解码
变量格式={URL解码,解码文本}
变量注释=用于URL解码。
智能输入={URL解码,}

五、时间日期类
[现行时间]
变量分类=时间日期
变量名称=现行时间(now)
变量格式={现行时间}或{now}
变量注释=返回当前系统时间。
智能输入={now}
变量举例={now}返回：2019年8月25日22时47分50秒。

[取启动时间]
变量分类=时间日期
变量名称=取启动时间
变量格式={取启动时间}
变量注释=返回自 Windows 系统启动后到现在为止所经历过的毫秒数。通常利用“取启动时间”来计算执行速度。
智能输入={取启动时间}

[时间间隔]
变量分类=时间日期
变量名称=时间间隔
变量格式={时间间隔,时间1,时间2}
变量注释=计算两个时间之间的间隔,返回时间间隔。时间1必须大于时间2。
智能输入={时间间隔,,}
变量举例={时间间隔,2019年6月3日10时4分20秒,2019年6月1日6时5分29秒}返回：2天3时58分51秒。

[星期几取日期]
变量分类=时间日期
变量名称=星期几取日期
变量格式={星期几取日期,时间,星期}
变量注释=返回指定时间段里指定星期几的日期。时间留空默认取当前时间。1-7分别代表星期一到星期日。
智能输入={星期几取日期,,}
变量举例={星期几取日期,2019年11月18日,5}返回：2019年11月22日。{星期几取日期,,3}。

[取星期]
变量分类=时间日期
变量名称=取星期
变量格式={取星期,时间}
变量注释=返回指定时间是星期几。
智能输入={取星期,}
变量举例={取星期,2019年9月17日}返回：星期二。{取星期,{时间}}。

[取月周数]
变量分类=时间日期
变量名称=取月周数
变量格式={取月周数,时间}
变量注释=返回指定时间在本月中的第几周。
智能输入={取月周数,}
变量举例={取月周数,2019年11月23日19时49分52秒 }返回：4。

[取年周数]
变量分类=时间日期
变量名称=取年周数
变量格式={取年周数,时间}
变量注释=返回指定时间在本年中的第几周。
智能输入={取年周数,}
变量举例={取年周数,2019年11月23日19时49分52秒}返回：47。

[取时间戳]
变量分类=时间日期
变量名称=取时间戳
变量格式={取时间戳,是否13位时间戳}
变量注释=取现行时间的10位或13位时间戳,默认是10位。
智能输入={取时间戳}
变量举例={取时间戳}返回：1573795710。{取时间戳,真}返回：1573795739888。

[延时]
变量分类=时间日期
变量名称=延时
变量格式={延时,延时间隔,延时单位}或{延迟,延时间隔,延时单位}
变量注释=用于延时指定的时间后,执行后续代码,无返回值。”延迟单位”缺省，默认为秒。”延迟单位”可填“0”、“1”、“2”、“3”，分别代表“0=毫秒  1=秒  2=分钟  3=小时”。
智能输入={延时,}
变量举例={延时,{取随机数,1,10}}。

六、特殊符号类

变量分类=特殊符号
变量名称=换行
变量格式={换行}
变量注释=产生一个换行,无返回值。回复中的手动换行将被程序自动去除。可使用手动换行使得程序便于阅读。
智能输入={换行}

[逗号]
变量分类=特殊符号
变量名称=逗号
变量格式={逗号}
变量注释=产生一个英文逗号。函数中的英文逗号被用作分割函数名和参数。在{}中误输入多余的“,”,将导致函数引用无效。
智能输入={逗号}

[制表符]
变量分类=特殊符号
变量名称=制表符
变量格式={制表符}
变量注释=产生一个制表符。回复中的手动制表符被程序自动去除。可使用手动制表符使得程序对齐便于阅读。
智能输入={制表符}

[分割号]
变量分类=特殊符号
变量名称=分割号
变量格式={分割号}
变量注释=产生一个中文分割号“·”。直接在代码中输入“·”会导致代码着色错误。
智能输入={分割号}

[叉]
变量分类=特殊符号
变量名称=叉
变量格式={叉}
变量注释=产生一个中文符号“×”。直接在代码中输入“×”会导致代码着色错误。
智能输入={叉}

[字符10]
变量分类=特殊符号
变量名称=字符10
变量格式={字符10}
变量注释=产生安卓QQ腾讯换行符。
智能输入={字符10}

[字符13]
变量分类=特殊符号
变量名称=字符13
变量格式={字符13}
变量注释=产生PCQQ腾讯换行符。
智能输入={字符13}

七、系统处理类
[创建文件夹]
变量分类=系统处理
变量名称=创建文件夹
变量格式={创建文件夹,文件夹路径}
变量注释=用于在指定目录创建文件夹。文件夹路径中用“\”来产生下一级子文件夹。
智能输入={创建文件夹,}
变量举例={创建文件夹,C:\Users\Administrator\Desktop\你好\好的}将在桌面创建父文件夹“你好”,子文件夹“好的”。

[文件修改时间]
变量分类=系统处理
变量名称=文件修改时间
变量格式={文件修改时间,文件完整路径}
变量注释=返回获取文件最后修改时间。
智能输入={文件修改时间,}
变量举例={文件修改时间,C:\Users\Administrator\Desktop\你好.txt}返回：2019年08月26日17时39分46秒。

[隐藏]
变量分类=系统处理
变量名称=隐藏
变量格式={隐藏,执行语句}
变量注释=用于隐藏某些函数的返回结果,不会影响到函数的执行,无返回值。
智能输入={隐藏,}
变量举例={隐藏,{写配置项,C:\Users\Administrator\Desktop\你好.ini,1,2,3}}。

[正则取文本]
变量分类=系统处理
变量名称=正则取文本
变量格式={正则取文本,正则表达式,搜索文本,存放数组}
变量注释=用于取正则匹配文本,结果保存在存放数组中,返回存放数组成员个数。
智能输入={正则取文本,,,}
变量举例={正则取文本,a.c,abcacc,正则取文本数组}{变量,正则取文本数组(1)}{变量,正则取文本数组(2)}返回：2abcacc。

[正则取子文本]
变量分类=系统处理
变量名称=正则取子文本	
变量格式={正则取子文本,正则表达式,搜索文本,总索引,子索引}
变量注释=用于取正则匹配子文本。总索引为文本索引位置，子索引为()表达式位置。
智能输入={正则取子文本,,,}
变量举例={正则取子文本,(a.c),abcacc,1,1}{正则取子文本,(a.c),abcacc,2,1}返回：abc acc。

[文字转语音]
变量分类=系统处理
变量名称=文字转语音	
变量格式={文字转语音,文本}
变量注释=将文字转化为语音。此函数使用百度接口，一个月需更换一次密钥。如若失效，请联系作者更新密钥。
智能输入={文字转语音,}
变量举例={文字转语音,你好}。

[图片识别]
变量分类=系统处理
变量名称=图片识别	
变量格式={图片识别,图片路径名称}
变量注释=用于识别指定路径图片的文字,并返回识别文字内容。一个月需更换一次密钥。如若失效，请联系作者更新密钥。
智能输入={图片识别,}
变量举例={图片识别,C:\Users\Administrator\Desktop\123.jpg}。

[运行]
变量分类=系统处理
变量名称=运行	
变量格式={运行,欲操作文件名}
变量注释=使用Windows的用户界面系统执行指定命令。
智能输入={运行,,}
变量举例={运行,D:\插件\先驱\先驱.exe}。

[cmd]
变量分类=系统处理
变量名称=cmd	
变量格式={cmd,欲运行的命令行}
变量注释=用于执行cmd命令,并返回执行结果。
智能输入={cmd,}
变量举例={cmd,ipconfig}。


[自定义函数]
变量分类=系统处理
变量名称=自定义函数(def)	
变量格式={def,自定义函数名称,自定义函数内容}
变量注释=用于自主定义函数；自定义函数名称用于后续调用；创建：{def,函数名,执行代码}  调用：{函数名,参数1,参数2……}。
在多参数时,用“,”分割各个参数。自定义函数传参时：请在自定义函数内容中使用：[参数1]、[参数2]……，调用时请使用“,”分割多个参数。调用函数的时候，会用“参数1”的值替换执行代码里[参数1]，以此类推。
此函数与“自定义函数”事件一致,方便之处在于：可以在“初始化”事件中集中定义并加载，无须单独做成回复。
自定义函数名称切勿使用内置函数名命名,否则将导致自定义函数失效。
在“初始化”事件中的自定义函数为全局的，在其它事件中的自定义函数为局部的。
智能输入={def,,}
变量举例={def,三个相加,{eva,[参数1]+[参数2]+[参数3]}}{三个相加,3,4,5}返回：12。

[写内存]
变量分类=系统处理
变量名称=写内存	
变量格式={写内存,写入文本}
变量注释=用于将指定文本写入内存,提高读写速度,返回“真”或“假”。
智能输入={写内存,}
变量举例={写内存,{读文本,C:\Users\Administrator\Desktop\测试.txt}}。

[读内存]
变量分类=系统处理
变量名称=读内存	
变量格式={读内存}
变量注释=用于将写入内存的文本读出。
智能输入={读内存}

[文件是否存在]
变量分类=系统处理
变量名称=文件是否存在	
变量格式={文件是否存在,文件完整路径包括文件名}
变量注释=用于判断指定文件是否存在,若存在返回“真”,若不存在返回“假”。
智能输入={文件是否存在,}

[删除文件]
变量分类=系统处理
变量名称=删除文件	
变量格式={删除文件,文件完整路径包括文件名}
变量注释=用于删除指定文件。测试运行模式下,若成功返回“真”,若失败返回“假”。警告！此删除相当于选定文件后按“Shift+Delete”键，文件不进回收站。
智能输入={删除文件,}

[文件枚举]
变量分类=系统处理
变量名称=文件枚举	
变量格式={文件枚举,目录,文件类型,文件名数组}
变量注释=枚举某个目录下的指定类型文件,将文件名保存在指定数组中,返回文件数量。文件名数组可空。
智能输入={文件枚举,,,}
变量举例={文件枚举,{运行目录}data\image,*.*,文件名数组}返回指定目录下的所有文件的个数（不包括文件夹及其子目录文件）。

[取文件大小]
变量分类=系统处理
变量名称=取文件大小	
变量格式={取文件大小,文件绝对路径}
变量注释=获取一个文件在磁盘上实际占据的字节数，如文件右键属性中的大小，显示就是实际压缩过的尺寸。
智能输入={取文件大小,}
变量举例={取文件大小,C:\Users\12761\Desktop\高中物理二级结论.doc}返回指定文件的大小。

[启动线程]
变量分类=系统处理
变量名称=启动线程	
变量格式={启动线程,线程数目,执行内容,传入参数,返回结果}
变量注释=用于异步并行执行。“传入参数”和“返回结果”可空。“传入参数”和“返回结果”均为数组名称。“传入参数”将会替换“执行内容”中的“参数”。
智能输入={启动线程,,}
变量举例={启动线程,100,{写配置,{应用目录}测试.ini,时间,{取时间戳,真},{now}}}。{启动线程,100,{json取文本,{网页访问,https://api.66mz8.com/api/qq.level.php?qq=参数},level},成员,QQ等级}。

[调用DLL]
变量分类=系统处理
变量名称=调用DLL	
变量格式={调用DLL,DLL路径,函数名,参数}
变量注释=用于调用指定DLL的函数，返回函数的返回值。可提供0-5个“参数”。DLL返回值和参数均只能为文本型。
智能输入={调用DLL,,}

[写到文件]
变量分类=系统处理
变量名称=写到文件	
变量格式={写到文件,文件路径,字节集变量}
变量注释=用于写到文件。
智能输入={写到文件,,}
变量举例={Base64解码,5rWL6K+V,测试可自改}{写到文件,C:\Users\12761\Desktop\测试.txt,测试可自改}

[读入文件]
变量分类=系统处理
变量名称=读入文件	
变量格式={读入文件,文件路径,字节集变量}
变量注释=用于读入文件。
智能输入={读入文件,,}
变量举例={读入文件,C:\Users\12761\Desktop\测试1.txt,测试可自改}
{写到文件,C:\Users\12761\Desktop\测试.txt,测试可自改}

[HTTP读文件]
变量分类=系统处理
变量名称=HTTP读文件	
变量格式={HTTP读文件,HTTP文件地址,字节集变量}
变量注释=获取互联网上指定HTTP地址处的网页或数据文件，返回文件内容字节集。
智能输入={HTTP读文件,,}
变量举例={HTTP读文件,https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1606918184636&di=8782ae368de06448ae5f624bc2f43e79&imgtype=0&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fw%3D580%2Fsign%3D3c36ab8cba1c8701d6b6b2ee177e9e6e%2F69d92912b31bb051ea5ca6403f7adab44bede088.jpg,测试可自改}
{写到文件,C:\Users\12761\Desktop\兔子.jpg,测试可自改}

[复制文件]
变量分类=系统处理
变量名称=复制文件	
变量格式={复制文件,被复制的文件名,复制到的文件名}
变量注释=用于复制文件，成功返回真，失败返回假。
智能输入={复制文件,,}





[移动文件]
变量分类=系统处理
变量名称=移动文件	
变量格式={移动文件,被移动的文件名,移动到的文件名}
变量注释=用于移动文件，成功返回真，失败返回假。
智能输入={移动文件,,}

八、网络爬虫类
[下载图片]
变量分类=网络爬虫
变量名称=下载图片
变量格式={下载图片,URL地址,保存图片路径及名称}
变量注释=将网络图片保存到本地。如果保存图片路径中没有指明文件名,将以文件MD5值作为文件名,函数返回文件名。
智能输入={下载图片,,}
变量举例={下载图片,http://pic1.win4000.com/pic/b/0e/bcc47296a5.jpg,C:\Users\Administrator\Desktop\美女.jpg}。

[网页访问_对象]
变量分类=网络爬虫
变量名称=网页访问_对象
变量格式={网页访问_对象,网址,访问方式,提交信息,提交Cookies,返回Cookies变量名,附加协议头,返回协议头变量名,返回状态代码变量名}
变量注释=使用WinHttp的对象方式访问网页。“网址”参数，完整的网页地址,必须包含http://或者https://。“访问方式”参数，0=GET 1=POST 2=HEAD 3=PUT 4=OPTIONS  5=DELETE  6=TRACE  7=CONNECT，可空，省略默认为0。“提交信息”参数，"POST"专用，自动UTF8编码，可空。“提交Cookies”参数，设置提交时的cookie，可空。“返回Cookies”可空，结果存放在“返回Cookies变量名”中，调用方法{var,返回Cookies变量名}。“返回Cookies变量名”自行定义，下同。“附加协议头”参数，一行一个请用换行符隔开，可空。“返回协议头”可空，结果存放在“返回协议头变量名”中，调用方法{var,返回协议头变量名}。“返回状态代码”可空，结果存放在“返回状态代码变量名”中，调用方法{var,返回状态代码变量名}。
智能输入={网页访问_对象,}

[网页访问]
变量分类=网络爬虫
变量名称=网页访问
变量格式={网页访问,网址,访问方式,提交信息,提交Cookies,返回Cookies,附加协议头,返回协议头}
变量注释=使用WinInet的API方式访问网页。其它参数请参考“网页访问_对象”。
智能输入={网页访问,}



[执行GET]
变量分类=网络爬虫
变量名称=执行GET
变量格式={执行GET,请求地址}
变量注释=执行GET方法。比“网页访问”函数更高效稳定。
智能输入={执行GET,}

[执行POST]
变量分类=网络爬虫
变量名称=执行POST
变量格式={执行POST,请求地址,提交数据}
变量注释=执行POST方法。比“网页访问”函数更高效稳定。
智能输入={执行POST,,}

[json取文本]
变量分类=网络爬虫
变量名称=json取文本
变量格式={json取文本,待解析json文本,属性表达式,是否转义(真/假)}
变量注释=用于解析json文本,返回取到的json文本,失败返回空。格式a.b.c，数组下标索引从1开始。“是否转义”：真，转义；假，不转义。这是为了处理返回值还是json数据的情况。
智能输入={json取文本,,}

[json取宽文本]
变量分类=网络爬虫
变量名称=json取宽文本
变量格式={json取宽文本,待解析json文本,属性表达式}
变量注释=用于解析json文本,返回取到的json文本，用于获取中文Unicode编码文本,失败返回空。格式a.b.c，数组下标索引从1开始。
智能输入={json取宽文本,,}

[json取数量]
变量分类=网络爬虫
变量名称=json取数量
变量格式={json取数量,待解析json文本,属性表达式}
变量注释=用于解析json文本,返回取到的json文本，用于获取中文Unicode编码文本,失败返回空。格式a.b.c，数组下标索引从1开始。
智能输入={json取数量,,}







[HTML解析]
变量分类=网络爬虫
变量名称=HTML解析
变量格式={HTML解析,HTML文本,css表达式,接收数组}
变量注释=用于HTML解析。此函数必须事先下载“群文件→兔子插件→HTML解析dll.zip”，将解压后的HtmlAgilityPack.dll文件放置在小栗子work_plugin_tmp文件夹内，否则会导致框架奔溃。但是重启框架后，框架会自动删除HtmlAgilityPack.dll，还得手动复制一次。
智能输入={HTML解析,,,}
变量举例={HTML解析,{网页访问,https://www.kuaidaili.com/free/},#list>table>tbody>tr>td,数组}{var,数组[1]}

九、回复控制类
前言：设置一个全局变量“小尾巴”，可在“群消息”“群聊消息”“私消息”“私聊消息”后面跟小尾巴。

[调用回复]
变量分类=回复控制
变量名称=调用回复
变量格式={调用回复,关键词}或{call,关键词}
变量注释=调用相应关键词的回复。
智能输入={调用回复,}
变量举例={调用回复,2}将会调用“2”的关键词。

[消息重发]
变量分类=回复控制
变量名称=消息重发
变量格式={消息重发,内容}
变量注释=机器人接收了“内容”,将会匹配关键词。
智能输入={消息重发,}
变量举例={消息重发,2}将会已“2”作为关键词,进行回复匹配并执行。

“调用回复”和“消息重发”的区别：
1.“调用回复”相当于易语言的调用子程序，会卡住后续代码，调用完关键词后，向下执行。
2.“消息重发”相当于易语言的启动线程，会立即调用关键词，不影响原代码，向下执行。

[全局群回复延时]
变量分类=回复控制
变量名称=全局群回复延时
变量格式={全局群回复延时,群号,控制时间}
变量注释=用于全局群回复延时,延时控制时间后发送消息。如果消息间隔大于控制时间,将不做延时处理。请在“初始化”事件中,进行全局群回复延时设置。全局群回复延时单群设置优先于“*”设置。
智能输入={全局群回复延时,,}
变量举例={全局群回复延时,*,5}将所有群的消息延迟5秒发送。{全局群回复延时,717141704,5}将717141704群的消息延迟5秒发送。{全局群回复延时,717141704|822155489,5}将717141704和822155489群的消息延迟5秒发送。{全局群回复延时,717141704,5}{全局群回复延时,*,10}将717141704群的消息延迟5秒发送；其它群延迟10秒发送。{全局群回复延时,717141704|822155489,5}{全局群回复延时,*,10}将717141704和822155489群的消息延迟5秒发送；其它群延迟10秒发送。

[全局群员回复延时]
变量分类=回复控制
变量名称=全局群员回复延时
变量格式={全局群员回复延时,QQ,群号,控制时间}
变量注释=用于全局群员回复延时,延时控制时间后发送消息。如果消息间隔大于控制时间,将不做延时处理。请在“初始化”事件中,进行全局群员回复延时设置。
智能输入={全局群员回复延时,,,}
变量举例={全局群员回复延时,1318377582,*,5}将QQ1318377582在所有群的消息延迟5秒发送。{全局群员回复延时,1318377582,717141704|822155489,5}将QQ1318377582在717141704和822155489群的消息延迟5秒发送,其它群不受影响。{全局群员回复延时,1318377582|3615138874,*,5}将QQ1318377582和3615138874在所有群的消息延迟5秒发送。{全局群员回复延时,1318377582|3615138874,717141704|822155489,5}将QQ1318377582和3615138874在717141704和822155489群的消息延迟5秒发送,其它群不受影响。

[局部群回复延时]
变量分类=回复控制
变量名称=局部群回复延时
变量格式={局部群回复延时,群号,控制时间}
变量注释=用于局部群回复延时,延时控制时间后发送消息。如果消息间隔大于控制时间，将不做延时处理。将此函数放置在关键词底下生效。
智能输入={局部群回复延时,,}
变量举例=同“全局群回复延时”。

[局部群员回复延时]
变量分类=回复控制
变量名称=局部群员回复延时
变量格式={局部群员回复延时,QQ,群号,控制时间}
变量注释=用于局部群员回复延时,延时控制时间后发送消息。如果消息间隔大于控制时间，将不做延时处理。将此函数放置在关键词底下生效。
智能输入={局部群员回复延时,,,}
变量举例=同“全局群员回复延时”。

[全局回复忽略]
变量分类=回复控制
变量名称=全局回复忽略
变量格式={全局回复忽略,忽略时间}
变量注释=用于全局消息忽略,将小于忽略时间的消息不予回复。如果消息间隔大于控制时间，将不做忽略处理。请在“初始化”事件中,进行全局消息忽略设置。
智能输入={全局回复忽略,}
变量举例={全局消息忽略,1}将忽略所有小于1秒的消息。

[局部回复忽略]
变量分类=回复控制
变量名称=局部回复忽略
变量格式={局部回复忽略,忽略时间}
变量注释=用于局部消息忽略,将小于忽略时间的消息不予回复。如果消息间隔大于控制时间，将不做忽略处理。将此函数放置在关键词底下生效。
智能输入={局部回复忽略,}
变量举例={局部消息忽略,2}将忽略所有小于2秒的消息。

优先级解释：
1.忽略控制＞回复延时。优先判定，可同时生效。
2.局部群员回复延时＞局部群回复延时＞全局群员回复延时＞全局群回复延时。优先判定，前者生效，后者就不生效。
注：全局群员回复延时单群设置优先于全局群回复延时设置。
注：请在“初始化”事件中,进行全局群回复延时设置。
注：全局,是为了一次性配置所有的；局部,是为了特殊的设置个别的。局部优先于全局。

[免除控制]
变量分类=回复控制
变量名称=免除控制
变量格式={免除控制}
变量注释=用于免除回复延时、忽略控制。将此函数放置在关键词底下生效。
智能输入={免除控制}

十、DB数据库类
[打开数据库]
变量分类=DB数据库
变量名称=打开数据库
变量格式={打开数据库,数据库路径名称}
变量注释=用于打开指定路径名称的数据库,若数据库不存在会新建数据库。
智能输入={打开数据库,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}。

[关闭数据库]
变量分类=DB数据库
变量名称=关闭数据库
变量格式={关闭数据库}
变量注释=关闭数据库。
智能输入={关闭数据库}

[创建数据表]
变量分类=DB数据库
变量名称=创建数据表
变量格式={创建数据表,数据表名称,字段名称1|字段名称|……,字段类型1|字段类型2|……}
变量注释=用于创建指定的数据表,必须先打开该表的数据库。复杂数据表，请使用sql语句创建。字段类型提供：文本、整数。多个字段名称、字段类型之间用“|”隔开,下同。
智能输入={创建数据表,,,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{创建数据表,test,QQ|msg,整数|文本}。

[删除数据表]
变量分类=DB数据库
变量名称=删除数据表
变量格式={删除数据表,表名称}
变量注释=用于删除指定的数据表,不保留数据表结构，必须先打开该表的数据库。警告！此操作将删除数据表。
智能输入={删除数据表,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{删除数据表,test}。

[清空数据表]
变量分类=DB数据库
变量名称=清空数据表
变量格式={清空数据表,表名称}
变量注释=用于清除指定的数据表内容,保留数据表结构，必须先打开该表的数据库。警告！此操作将清除数据表的所有内容。
智能输入={清空数据表,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{清空数据表,test}。

[新增记录]
变量分类=DB数据库
变量名称=新增记录
变量格式={新增记录,表名称,字段名称1|字段名称2……,字段数值1|字段数值2,……}
变量注释=用于新增记录,必须先打开该表的数据库,字段名称已经存在，返回“新增记录成功”。字段数值如果为文本,请用英文单引号包围,下同。
智能输入={新增记录,,,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{新增记录,test,QQ|msg,1318377582|'老师好'}。

[删除记录]
变量分类=DB数据库
变量名称=删除记录
变量格式={删除记录,表名称,删除条件}
变量注释=用于删除符合指定条件的所有记录,必须先打开该表的数据库。
智能输入={删除,,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{删除记录,test,QQ=1234}。


[修改记录]
变量分类=DB数据库
变量名称=修改记录
变量格式={修改记录,表名称,修改字段名称和数值,修改条件}
变量注释=用于修改符合指定条件的所有记录,必须先打开该表的数据库,字段名称已经存在；返回“修改记录成功”。修改信息可以只修改一列,也可以一次修改多列的值。
智能输入={修改记录,,,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{修改记录,test,QQ=1234|msg='你好啊',QQ='12'}。

[查找记录]
变量分类=DB数据库
变量名称=查找记录
变量格式={查找记录,查找条件(sql语句),保存数组}
变量注释=用于查找符合指定条件的所有记录,必须先打开该表的数据库。“*”代表查找所以字段。请使用“保存数组.字段名称[序号]”数组来获取查找到的记录。
智能输入={查找记录,,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{查找记录,select * from test where msg='你好啊',保存数组}{变量,保存数组.QQ[1]}。{打开数据库,C:\Users\Administrator\Desktop\测试.db}{查找记录,select msg from test where qun='124',保存数组}{变量,保存数组.msg[1]}。

[执行sql语句]
变量分类=DB数据库
变量名称=执行sql语句
变量格式={执行sql语句,sql语句}
变量注释=执行sql语句。请先打开数据库,sql语句中的逗号,请使用{逗号}。
智能输入={执行sql语句,}
变量举例={打开数据库,C:\Users\Administrator\Desktop\测试.db}{执行sql语句,CREATE TABLE test ([ID] INTEGER primary key{逗号}[content] TEXT{逗号}[result] TEXT)}。

[取字段名]
变量分类=DB数据库
变量名称=取字段名
变量格式={取字段名,表名称,保存数组}
变量注释=用于获取指定表的所有字段,字段名保存在指定数组中,返回字段个数。
智能输入={取字段名,,}
变量举例={打开数据库,{应用目录}run.db}{取字段名,run,字段名称}返回：9。{打开数据库,{应用目录}run.db}{for,{取字段名,run,字段名称},i,字段{var,i}为：{var,字段名称[{var,i}]}}。

十一、画板制图类
前言：
1.第一步先“创建画板”，画板是容器，可以在画板上画图片、写文字、画图形。
2.在画图片前，请先载入图片数据。
3.在写文字之前，请先设置文字字体、颜色以及写的位置。
4.在画图形之前，请先设置画笔。
5.在填充图形之前，请先设置刷子。
6.可使用{预览画板}在测试运行中预览画板效果。
7.最后，使用完后，请“生成图片”，退出画板。

[取颜色值]
变量分类=画板制图
变量名称=取颜色值
变量格式={取颜色值,红,绿,蓝}
变量注释=返回一个整数，用来表示一个红绿蓝颜色值。
智能输入={取颜色值,,,}
变量举例={创建画板,100,200,{取颜色值,72,61,139}}。

[创建画板]
变量分类=画板制图
变量名称=创建画板
变量格式={创建画板,宽度,高度,背景颜色}
变量注释=用于创建指定的画板。使用制图类函数前，请先创建画板。背景颜色为整数，可利用{取颜色值,红,绿,蓝}来获取。画板未退出，将会被反复使用。省略“背景颜色”默认为0。
智能输入={创建画板,,}
变量举例={创建画板,100,200,255}创建宽度为100高度为200背景颜色为红色。

[置画板尺寸]
变量分类=画板制图
变量名称=置画板尺寸
变量格式={置画板尺寸,新宽度,新高度}
变量注释=用于重新设置画板的宽度和高度。新宽度和新高度，至少有一个不为空。
智能输入={置画板尺寸,,}
变量举例={置画板尺寸,{取图片宽度,C:\Users\Administrator\Desktop\QQ图片20200202095232.jpg},{取图片高度,C:\Users\Administrator\Desktop\QQ图片20200202095232.jpg}}。

[预览画板]
变量分类=画板制图
变量名称=预览画板
变量格式={预览画板}
变量注释=仅在“测试运行”中使用，用来预览画板内容。
智能输入={预览画板}

[退出画板]
变量分类=画板制图
变量名称=退出画板
变量格式={退出画板}
变量注释=在执行完画板后，及时退出。不然会导致下次画板创建失败。如果多个关键词会涉及同一个画板，则不需要退出。
智能输入={退出画板}

[生成图片]
变量分类=画板制图
变量名称=生成图片
变量格式={生成图片,保存图片路径及名称,输出宽度,输出高度,透明色}
变量注释=将画板内容保存到本地，返回图片路径及名称。如果保存图片路径中没有指明文件名,将以文件MD5值作为文件名,函数返回文件名。输出宽度,输出高度和透明色可省略。
智能输入={生成图片,}
变量举例={生成图片,{运行目录}\data\image\Rabbit\}。

[生成图片字节集]
变量分类=画板制图
变量名称=生成图片字节集
变量格式={生成图片字节集,保存图片字节集,输出宽度,输出高度,透明色}
变量注释=将画板内容保存到字节集变量中。输出宽度,输出高度和透明色可省略。
智能输入={生成图片字节集,}

[载入图片]
变量分类=画板制图
变量名称=载入图片
变量格式={载入图片,图片路径及名称,旋转翻转}
变量注释=用来载入图片，返回图片句柄。图片路径为绝对路径，包含扩展名。旋转翻转可省略，默认为原图载入。“旋转翻转”其它可选值：“1”为旋转90度；“2”为旋转180度；“3”为旋转270度；“4”为水平翻转；“5”为旋转90度水平翻转；“6”为旋转180度水平翻转；“7”为旋转270度水平翻转。
智能输入={载入图片,}

[载入图片字节集]
变量分类=画板制图
变量名称=载入图片字节集
变量格式={载入图片字节集,图片字节集变量,旋转翻转}
变量注释=用来载入图片字节集，返回图片句柄。图片路径为绝对路径，包含扩展名。旋转翻转可省略，默认为原图载入。“旋转翻转”其它可选值：“1”为旋转90度；“2”为旋转180度；“3”为旋转270度；“4”为水平翻转；“5”为旋转90度水平翻转；“6”为旋转180度水平翻转；“7”为旋转270度水平翻转。
智能输入={载入图片字节集,}

[画图片]
变量分类=画板制图
变量名称=画图片
变量格式={画图片,图片句柄,图片左边画出位置,图片顶边画出位置,图片画出宽度,图片画出高度}
变量注释=用来在画板中画出指定图片句柄的图片。图片左边画出位置,图片顶边画出位置,图片画出宽度,图片画出高度,均可省略。图片左边画出位置和图片顶边画出位置省略后，将在当前画笔位置画出图片。图片画出宽度和图片画出高度省略后，将画出整个图片。通俗的讲，画图片就是把图片画到画板上。
智能输入={画图片,}
变量举例={画图片,{载入图片,C:\Users\Administrator\Desktop\QQ图片20200202095232.jpg}}。

[画图片_裁剪]
变量分类=画板制图
变量名称=画图片_裁剪
变量格式={画图片_裁剪,图片句柄,图片左边画出位置,图片顶边画出位置,图片画出宽度,图片画出高度,截取图片左边位置,截取图片顶边位置,截取图片宽度,截取图片高度}
变量注释=用来在画板中画出指定图片句柄的图片。图片左边画出位置,图片顶边画出位置,图片画出宽度,图片画出高度,均可省略。图片左边画出位置和图片顶边画出位置省略后，将在当前画笔位置画出图片。图片画出宽度和图片画出高度省略后，将画出整个图片。截取图片中一部分的左边位置，如果省略，默认为0；截取图片中一部分的顶边位置，如果省略，默认为0；截取图片中一部分的宽度，如果省略，默认为图片本身的宽度；截取图片中一部分的高度，如果省略，默认为图片本身的高度。
智能输入={画图片_裁剪,}


[取图片宽度]
变量分类=画板制图
变量名称=取图片宽度
变量格式={取图片宽度,图片路径及名称}
变量注释=用于获取指定图片的宽度。
智能输入={取图片宽度,}

[取图片宽度字节集]
变量分类=画板制图
变量名称=取图片宽度字节集
变量格式={取图片宽度字节集,图片字节集}
变量注释=用于获取指定图片字节集的宽度。
智能输入={取图片宽度字节集,}

[取图片高度]
变量分类=画板制图
变量名称=取图片高度
变量格式={取图片高度,图片路径及名称}
变量注释=用于获取指定图片的高度。
智能输入={取图片高度,}

[取图片高度字节集]
变量分类=画板制图
变量名称=取图片高度字节集
变量格式={取图片高度字节集,图片字节集}
变量注释=用于获取指定图片字节集的高度。
智能输入={取图片高度字节集,}

[取画板宽度]
变量分类=画板制图
变量名称=取画板宽度
变量格式={取画板宽度}
变量注释=用于获取取画板宽度。
智能输入={取画板宽度}

[取画板高度]
变量分类=画板制图
变量名称=取画板高度
变量格式={取画板高度}
变量注释=用于获取取画板高度。
智能输入={取画板高度}

[置写出位置]
变量分类=画板制图
变量名称=置写出位置
变量格式={置写出位置,横坐标,纵坐标}
变量注释=定位文本写出的位置。
智能输入={置写出位置,,}

[取写出位置]
变量分类=画板制图
变量名称=取写出位置
变量格式={取写出位置,横坐标变量名,纵坐标变量名}
变量注释=获取画板文本写出的当前位置坐标。请使用{var,横坐标}、{var,纵坐标}取得的坐标位置。
智能输入={取写出位置,,}

[写出文本]
变量分类=画板制图
变量名称=写出文本
变量格式={写出文本,欲写出文本}
变量注释=在当前写出位置处写出指定的文本，自动调整写出位置到所写出数据的末位置。如果事先未指定写出位置，默认从（0,0）开始写起。
智能输入={写出文本,}

[写文本行]
变量分类=画板制图
变量名称=写文本行
变量格式={写文本行,欲写出文本}
变量注释=在当前写出位置写出指定的文本，并将现行写出位置调整到下行行首。如果事先未指定写出位置，默认从（0,0）开始写起。
智能输入={写文本行,}

[矩形文本]
变量分类=画板制图
变量名称=矩形文本
变量格式={矩形文本,欲写出文本,左边,顶边,右边,底边}
变量注释=在指定矩形区域写出指定的文本。如果事先未指定写出位置，默认从（0,0）开始写起。
智能输入={矩形文本,,,,,}

[定位写出]
变量分类=画板制图
变量名称=定位写出
变量格式={定位写出,欲写出文本,横坐标,纵坐标}
变量注释=在指定坐标位置写出指定的文本。
智能输入={定位写出,,,}

[字体]
变量分类=画板制图
变量名称=字体
变量格式={字体,字体名称,字体大小,加粗,倾斜,下划线,删除线}
变量注释=用于设置文字字体。字体名称,字体大小,加粗,倾斜,下划线,删除线，至少有一个不为空，省略为默认值。
智能输入={字体,,}

[文本前景色]
变量分类=画板制图
变量名称=文本前景色
变量格式={文本前景色,颜色值}
变量注释=用于设置文字的颜色。颜色值可利用{取颜色值,红,绿,蓝}来获取。
智能输入={文本前景色,}
变量举例={文本前景色,{取颜色值,0,139,139}}。

[文本背景色]
变量分类=画板制图
变量名称=文本背景色
变量格式={文本背景色,颜色值}
变量注释=用于设置文字的背景颜色。颜色值可利用{取颜色值,红,绿,蓝}来获取。
智能输入={文本背景色,}
变量举例={文本背景色,{取颜色值,0,139,139}}。

[文本透明]
变量分类=画板制图
变量名称=文本透明
变量格式={文本透明}
变量注释=用于设置文字的背景颜色为透明。
智能输入={文本透明}

[文本间距]
变量分类=画板制图
变量名称=文本间距
变量格式={文本间距,间距值}
变量注释=用于设置写出文字时文字的间距。
智能输入={文本间距,}

[文本宽度]
变量分类=画板制图
变量名称=文本宽度
变量格式={文本宽度,文本}
变量注释=用于返回指定文本在当前字体设置下的宽度。可以计算文本的宽度，让文本换行。或者获取写出位置。
智能输入={文本宽度,}
变量举例={矩形文本,{for,8,,哈},100,300,{eva,100+{文本宽度,{for,8,,哈}}/2},800}可实现一行4个字。

[文本高度]
变量分类=画板制图
变量名称=文本高度
变量格式={文本高度,文本}
变量注释=用于返回指定文本在当前字体设置下的高度。
智能输入={文本宽度,}

[画笔类型]
变量分类=画板制图
变量名称=画笔类型
变量格式={画笔类型,类型值}
变量注释=用于设置画笔的类型。类型值0代表实线；1代表虚线；2代表点线；3代表点划线；4代表双点划线；5代表空笔。
智能输入={画笔类型,}

[画笔粗细]
变量分类=画板制图
变量名称=画笔粗细
变量格式={画笔粗细,粗细值}
变量注释=用于设置画笔的粗细。
智能输入={画笔粗细,}

[画笔颜色]
变量分类=画板制图
变量名称=画笔颜色
变量格式={画笔颜色,颜色值}
变量注释=用于设置画笔的颜色。
智能输入={画笔颜色,}

[置画笔位置]
变量分类=画板制图
变量名称=置画笔位置
变量格式={置画笔位置,横坐标,纵坐标}
变量注释=用于设置画笔的位置。
智能输入={置画笔位置,,}

[取画笔位置]
变量分类=画板制图
变量名称=取画笔位置
变量格式={取画笔位置,横坐标变量名,纵坐标变量名}
变量注释=获取画板画笔的当前位置坐标。请使用{var,横坐标}、{var,纵坐标}取得的坐标位置。
智能输入={取画笔位置,,}

[取画笔位置]
变量分类=画板制图
变量名称=取画笔位置
变量格式={取画笔位置,横坐标变量名,纵坐标变量名}
变量注释=获取画板画笔的当前位置坐标。请使用{变量,横坐标}、{变量,纵坐标}取得的坐标位置。
智能输入={取画笔位置,,}

[画点]
变量分类=画板制图
变量名称=画点
变量格式={画点,横坐标,纵坐标,欲置入的颜色值}
变量注释=用于画点。“欲置入的颜色值”可省略，省略后将使用画笔颜色。
智能输入={画点,,}

[画直线]
变量分类=画板制图
变量名称=画直线
变量格式={画直线,起始点横坐标,起始点纵坐标,结束点横坐标,结束点纵坐标}
变量注释=用于画直线。
智能输入={画直线,,,,}

[画连续线]
变量分类=画板制图
变量名称=画连续线
变量格式={画连续线,横坐标1|纵坐标1,横坐标2|纵坐标2,……}
变量注释=用于连续多个顶点画直线。需预先指定连续线段的画笔画出位置（起始点坐标），即先“置画笔位置”。
智能输入={画连续线,,}

[画曲线]
变量分类=画板制图
变量名称=画曲线
变量格式={画曲线,横坐标1|纵坐标1,横坐标2|纵坐标2,……}
变量注释=用于连续多个顶点画曲线。需预先指定连续线段的画笔画出位置（起始点坐标），即先“置画笔位置”。预先指定曲线的画笔画出位置（起始顶点），3点为一组（控制点、控制点、顶点）生成贝塞尔曲线。曲线各控制点的横向及纵向坐标值（不包含起始顶点），建议为3的倍数。
智能输入={画曲线,,}

[画矩形]
变量分类=画板制图
变量名称=画矩形
变量格式={画矩形,矩形左上角横坐标,矩形左上角纵坐标,矩形右下角横坐标,矩形右下角纵坐标}
变量注释=用于画矩形。
智能输入={画矩形,,,,}

[画圆角矩形]
变量分类=画板制图
变量名称=画圆角矩形
变量格式={画圆角矩形,矩形左上角横坐标,矩形左上角纵坐标,矩形右下角横坐标,矩形右下角纵坐标,圆角宽度,圆角高度}
变量注释=用于画圆角矩形。
智能输入={画圆角矩形,,,,,,}

[画渐变矩形]
变量分类=画板制图
变量名称=画渐变矩形
变量格式={画渐变矩形,矩形区域左边,矩形区域顶边,矩形区域宽度,矩形区域高度,渐变方向,首渐变颜色,尾渐变颜色}
变量注释=用于画渐变矩形。渐变方向1代表从上到下；2代表从左到右。
智能输入={画渐变矩形,,,,,,,}

[画椭圆]
变量分类=画板制图
变量名称=画椭圆
变量格式={画椭圆,椭圆左上角横坐标,椭圆左上角纵坐标,椭圆右下角横坐标,椭圆右下角纵坐标}
变量注释=用于画椭圆。
智能输入={画椭圆,,,,}

[画圆]
变量分类=画板制图
变量名称=画圆
变量格式={画圆,圆心横坐标,圆心纵坐标,半径}
变量注释=用于画圆。
智能输入={画圆,,,}

[刷子类型]
变量分类=画板制图
变量名称=刷子类型
变量格式={刷子类型,类型值}
变量注释=用于设置刷子类型。刷子用来填充图形。刷子类型1代表横线；2代表竖线；3代表左斜线；4代表右斜线；5代表直交叉线；6代表斜交叉线；7代表颜色刷子。
智能输入={刷子类型,}

[刷子颜色]
变量分类=画板制图
变量名称=刷子颜色
变量格式={刷子颜色,颜色值}
变量注释=用于设置刷子颜色。
智能输入={刷子颜色,}

[填充矩形]
变量分类=画板制图
变量名称=填充矩形
变量格式={填充矩形,矩形左上角横坐标,矩形左上角纵坐标,矩形右下角横坐标,矩形右下角纵坐标}
变量注释=用于填充矩形。
智能输入={填充矩形,,,,}

[填充圆角矩形]
变量分类=画板制图
变量名称=填充圆角矩形
变量格式={填充圆角矩形,矩形左上角横坐标,矩形左上角纵坐标,矩形右下角横坐标,矩形右下角纵坐标,圆角宽度,圆角高度}
变量注释=用于填充圆角矩形。
智能输入={填充圆角矩形,,,,,,}

[填充椭圆]
变量分类=画板制图
变量名称=填充椭圆
变量格式={填充椭圆,椭圆左上角横坐标,椭圆左上角纵坐标,椭圆右下角横坐标,椭圆右下角纵坐标}
变量注释=用于填充椭圆。
智能输入={填充椭圆,,,,}

[图片转换]
变量分类=画板制图
变量名称=图片转换
变量格式={图片转换,待转换图片路径,转换后图片路径,转换格式,图片质量}
变量注释=用于图片格式和质量转换。图片路径为绝对路径包含扩展名。转换格式为1-5整数值(1、bmp；2、jpg；3、gif；4、tiff；5、png)。图片质量为0-100整数值，只对JPG格式有效,0最差效果,100最好效果,留空默认为100。
智能输入={图片转换,,,,}

[图像圆角化]
变量分类=画板制图
变量名称=图像圆角化
变量格式={图像圆角化,原始图片路径,圆角图片路径}
变量注释=用于图像圆角化。返回圆角图片路径。
智能输入={图像圆角化,,}
变量举例={发送图片,{图像圆角化,{下载图片,http://q1.qlogo.cn/g?b=qq&nk={QQ}&s=100,{应用目录}},{应用目录}头像.jpg}}

十二、制作动图类
前言：
1.先设置动画宽度、高度。
2.再设置动画循环、延迟、透明。
3.再创建动画。
4.再加入图片。
5.最后保存动画。

[动画宽度]
变量分类=制作动图
变量名称=动画宽度
变量格式={动画宽度,图像宽度}
变量注释=用于设置图像宽度。
智能输入={动画宽度,}

[动画高度]
变量分类=制作动图
变量名称=动画高度
变量格式={动画高度,图像高度}
变量注释=用于设置图像高度。
智能输入={动画高度,}

[动画循环]
变量分类=制作动图
变量名称=动画循环
变量格式={动画循环,循环次数}
变量注释=用于设置动画循环。“循环次数”为0表示无限次。
智能输入={动画循环,}

[动画延迟]
变量分类=制作动图
变量名称=动画延迟
变量格式={动画延迟,延迟时间}
变量注释=用于设置动画延迟时间。初始值为“60”。当前帧的停留时间，以1/100秒为单位。
智能输入={动画延迟,}

[动画透明]
变量分类=制作动图
变量名称=动画透明
变量格式={动画透明,真/假}
变量注释=是否透明，透明部分显示出前一帧的图像，产生叠加效果。
智能输入={动画透明,}

[动画创建]
变量分类=制作动图
变量名称=动画创建
变量格式={动画创建}
变量注释=根据指定动画信息创建GIF动画，如果已经创建，将清空原来的对象。
智能输入={动画创建}

[动画图片]
变量分类=制作动图
变量名称=动画图片
变量格式={动画图片,图片路径,图片数据}
变量注释=根据指定帧信息添加GIF动画，优先选择从文件载入。“图片路径”可以被省略，可使用BMP、JPG和GIF等系统支持的图片格式的图片文件。“图片数据”可以被省略。可使用BMP、JPG和GIF等系统支持的图片格式的图片数据(字节集数据)。
智能输入={动画图片,}

[动画保存]
变量分类=制作动图
变量名称=动画保存
变量格式={动画保存,图片路径}
变量注释=生成和保存当前的GIF动画。
智能输入={动画保存,}

十三、定时任务类
（一）定时任务界面
定时任务采取调用关键词的方式，只识别：开关、关键词、回复内容。
关键词可以手动输入，也可下拉选择。Q列表请手动填写好友QQ号，多个用英文分号”;”分割。执行次数不填或填0，代表执行无限次。
先添加，再启动。可暂停，可删除。
crontab填写说明如下：
警告：同一关键词只能添加一个定时任务。重复添加将覆盖。
参数一共分为6段，[秒] [分] [时] [日] [月] [星期几]。
1.时间可以可以使用*来代表所有，也可以用数字指定固定的时间。
例如： 0 0 0 * * *。说明：每天0点整执行
2.时间格式通过“,”可以指定多项不同的时间。例如：0 0,15,30,45 * * * *。说明：每小时的0分、15分、30分和45分执行
3.时间格式通过“-”可以指定时间段。例如：0 0,30 8-21 * * *。说明：每天08点到21点之间，每隔半小时执行
4.时间格式通过“*/”可以指定时间间隔。例如：*/3 * * * * *。说明：每隔3秒执行一次
5.时间范围：
  [秒] 可以是从0到59之间的任何整数。
  [分] 可以是从0到59之间的任何整数。
  [小时] 可以是从0到23之间的任何整数。
  [天] 表示日期，可以是从1到31之间的任何整数。
  [月] 表示月份，可以是从1到12之间的任何整数。
  [星期几] 可以是从1到7之间的整数，依次代表星期一至星期日。
6.具体使用方法可以百度搜索：crontab。
7.其它举例：
  0 0 17 * * 1-5说明：周一到周五每天下午5:00 
  0 0 */2 * * *说明：每两个小时
  0 50 7 * * *说明：每天7：50
  0 0 0 1,15 * *说明：每月1号和15号
  0 1 * * * *说明：每小时的第一分执行
  0 0 3 * * 1-5说明：每周一至周五3点钟
（二）定时任务函数
[添加定时任务]
变量分类=定时任务
变量名称=添加定时任务
变量格式={添加定时任务,任务名称,crontab,robot,群列表,Q列表,执行次数,执行代码}
变量注释=用于添加定时任务并执行。任务名称不允许重复，重复添加将覆盖。robot、群列表、Q列表用英文分号分割。执行次数为0代表无限次。如需在线添加代码，请反转义执行代码。
智能输入={添加定时任务,,,,,,,}


[删除定时任务]
变量分类=定时任务
变量名称=删除定时任务
变量格式={删除定时任务,任务名称}
变量注释=用于删除定时任务。
智能输入={删除定时任务,}

十四、公共函数类
[拦截]
变量分类=公共函数
变量名称=拦截	
变量格式={拦截}
变量注释=酷Q：消息处理完毕后拦截,不交由其它插件处理。可设置条件，嵌套使用。酷Q按各个插件的优先级,依次将消息下发给插件处理；本插件以将优先级设置为20000,如果依然存在被其它插件拦截的情况,请在酷Q主界面的“事件列表”里,手动设置本插件的优先级。可爱猫：可爱猫的优先级未知。
智能输入={拦截}

[回复等待]
变量分类=公共函数
变量名称=回复等待(input)
变量格式={回复等待,等待内容,等待时间,执行语句}或{input,等待内容,等待时间,执行语句}
变量注释=发出等待内容,在等待时间内,执行相应的语句。在回复等待期间,每一次接受消息,{msg}、{QQ}(可爱猫为{WX})都会实时的更改为输入者的。可在执行语句中使用{跳出等待},提前结束等待。可在等待内容中使用{回复重发,秒数},在指定秒数重新发送等待内容。可在执行语句中使用{重置等待},重置等待时间。不建议在input里再使用input嵌套，因为嵌套后，内外层的input都会执行。可在input里设置变量，来记录执行的步骤。提示：input函数内发送消息，必须使用{群消息,}或{私消息,}。
智能输入={input,,,}
变量举例={input,请发送消息{回复重发,5},10,{群消息,{@,{QQ}}你发送了：{msg}{重置等待}}{if,'{msg}'=='你好',{跳出等待}}}。

[发送图片]
变量分类=公共函数
变量名称=发送图片
变量格式={发送图片,图片路径名称}或={发送图片本地,图片路径名称}
变量注释=用于发送指定图片。图片路径具体到文件名,包括扩展名。图片路径为目录时,从该目录随机选择一张图片发送。酷Q：也可以使用图片CQ码[CQ:image,file=Rabbit\QQ图片20200210204801.jpg]其中逗号需要处理为：[CQ:image{逗号}file=Rabbit\QQ图片20200210204801.jpg]。
智能输入={发送图片,}
变量举例={发送图片,C:\Users\Administrator\Desktop\QQ图片20200210204801.jpg}。{发送图片,C:\Users\Administrator\Desktop\图片}。

区分多种图片发送方式：发送图片本地、发送图片字节集、发送图片网络
1.发送图片本地(发送图片)：用来发送磁盘上的本地图片。
2.发送图片字节集：用来发送制图生成的图片。
3.发送图片网络(发送网络图片)：用来发送网页图片。

[消息]
变量分类=公共函数
变量名称=消息(msg)	
变量格式={消息}或{msg}
变量注释=用于触发关键词的消息。酷Q：发送图片、语音时,{消息}返回的是文件路径和名称。
智能输入={msg}

[机器人]
变量分类=公共函数
变量名称=机器人(robot)	
变量格式={机器人}或{robot}
变量注释=用于获取机器人账号。
智能输入={robot}

[群消息]
变量分类=公共函数
变量名称=群消息
变量格式={群消息,消息}
变量注释=用于发送群聊消息。
智能输入={群消息,}

[群聊消息]
变量分类=公共函数
变量名称=群聊消息
变量格式={群聊消息,群号,消息}
变量注释=用于发送指定群聊消息。
智能输入={群聊消息,,}

[私消息]
变量分类=公共函数
变量名称=私消息
变量格式={私消息,消息}
变量注释=用于发送私聊消息。
智能输入={私消息,}

[私聊消息]
变量分类=公共函数
变量名称=私聊消息
变量格式={私聊消息,QQ或WX,消息}
变量注释=用于发送指定私聊消息。
智能输入={私聊消息,,}

[群号]
变量分类=公共函数
变量名称=群号(group)	
变量格式={群号}或{group}
变量注释=触发事件者所在群的群号。{setv,fromGroup,你要的群号}会改变内置{group}。{group}其实就是{var,fromGroup}。
智能输入={group}

[QQ/WX]
变量分类=公共函数
变量名称=QQ	/WX
变量格式={QQ}或{WX}
变量注释=用于获取触发消息者的账号，跨平台使用时无须更改。酷Q：群聊事件里是发消息者；群员退群、被踢事件里,是离群者；管理员增加、减少事件中,是被提升、取消管理者；群员加群、群友被邀事件中,是入群者。
智能输入={QQ}

[机器人昵称]
变量分类=公共函数
变量名称=机器人昵称	
变量格式={机器人昵称}
变量注释=用于获取机器人昵称。
智能输入={机器人昵称}

[取群名]
变量分类=公共函数
变量名称=取群名	
变量格式={取群名,群号}
变量注释=用于取群号所对应的群名称。
智能输入={取群名,}
变量举例={取群名,{group}}。

[type]
变量分类=公共函数
变量名称=type	
变量格式={type}
变量注释=用于获取该条消息的来源，群聊或私聊。
智能输入={type}

[音乐分享]
变量分类=公共函数
变量名称=音乐分享
变量格式=酷Q：{音乐分享,歌曲ID, 音乐网站类型, 样式ID}。可爱猫：{音乐分享,{group}或{WX},歌曲名称}。小栗子：{音乐分享,分享对象,歌曲名,歌手名,跳转地址,封面地址,文件地址,应用类型,分享类型}
变量注释=音乐分享。酷Q：“歌曲ID”为音乐的歌曲数字ID。“音乐网站类型”可空，目前支持 qq/QQ音乐 163/网易云音乐 xiami/虾米音乐，默认为qq。“样式ID”为指定分享样式。    小栗子：“分享对象”为分享的群或分享的好友QQ。“跳转地址”为点击音乐json后跳转的地址。“封面地址”为音乐的封面图片地址。“文件地址”为音乐源文件地址，如https://xxx.com/xxx.mp3。“应用类型”为0QQ音乐 1虾米音乐 2酷我音乐 3酷狗音乐 4网易云音乐  默认0。“分享类型”为0私聊 1群聊  默认0。
智能输入={音乐分享,}

[分享链接]
变量分类=公共函数
变量名称=分享链接
变量格式=酷Q：{分享链接,链接,标题,简介,图片链接}。可爱猫：{分享链接,{group}或{WX},链接标题,链接内容,跳转链接,图片的链接,图标的链接}。
变量注释=分享链接。酷Q：Air版不支持链接分享,将把链接以文本的形式发送。标题、简介、图片链接,可省略。分享的标题,建议12字以内；分享的简介,建议30字以内；分享的图片链接,留空则为默认图片。可爱猫：跳转链接、图片的链接、图标的链接,可空。
智能输入={分享链接,,,,}

[取群成员信息]
变量分类=公共函数
变量名称=取群成员信息	
变量格式={取群成员信息,QQ或WX,不使用缓存}
变量注释=用于取群成员的信息。酷Q：不使用缓存，安全稳定，但获取信息不及时；使用缓存，信息实时更新，但大概率被冻结。可爱猫：可爱猫取到的是微信昵称，无法取到群昵称。契约PC协议只能获取到QQ和管理权限。
智能输入={取群成员信息,}

[踢出]
变量分类=公共函数
变量名称=踢出	
变量格式={踢出,QQ或WX,group}或{踢出}
变量注释=踢出指定群成员。”group”可省略，默认为触发群。
智能输入={踢出,}
变量举例=格式一：{踢出}踢出触发群的触发者。格式二：{踢出,1318377582}踢出触发群的1318377582。格式三：{踢出言,1318377582,822155489}踢出指定群822155489指定QQ1318377582。

[检查更新]
变量分类=公共函数
变量名称=检查更新
变量格式={检查更新}
变量注释=用于检查更新，返回版本信息和检查结果。
智能输入={检查更新}

[在线更新]
变量分类=公共函数
变量名称=在线更新
变量格式={在线更新}
变量注释=用于在线更新，返回“开始更新”或“无需更新”或“更新完毕”。
智能输入={在线更新}

十五、QQ函数类
[应用目录]
变量分类=QQ函数
变量名称=应用目录	
变量格式={应用目录}
变量注释=返回插件的运行目录。{应用目录}最后位置自带“\”。
智能输入={应用目录}

[运行目录]
变量分类=QQ函数
变量名称=运行目录	
变量格式={运行目录}
变量注释=返回酷Q的运行目录。{运行目录}最后位置自带“\”。
智能输入={运行目录}

[操作者QQ]
变量分类=QQ函数
变量名称=操作者QQ	
变量格式={操作者QQ}
变量注释=用于执行者的QQ号。群员被踢事件里,是管理员；群友被邀事件中,是邀请者。
智能输入={操作者QQ}

[艾特]
变量分类=QQ函数
变量名称=艾特(@)	
变量格式={@,QQ}或{@,全体成员}或{@,all}；{艾特,QQ号}或{艾特,全体成员}或{艾特,all}。
变量注释=艾特一个人或全体成员。
智能输入={@,}
变量举例={@,3615138874}。{@,all}。{@,{QQ}},直接艾特发送消息者。

[禁言]
变量分类=QQ函数
变量名称=禁言	
变量格式={禁言,Group,QQ,秒数}
变量注释=禁言指定群的QQ指定的秒数。”Group”可省略，默认为触发群。”QQ”可省略,默认为触发者。机器人要是管理员,才能实现禁言。对群主和其他管理员无效。
智能输入={禁言,,}
变量举例=格式一：{禁言,10}禁言触发群的触发者10秒。格式二：{禁言,1318377582,10}禁言触发群的1318377582 10秒。格式三：{禁言,822155489,1318377582,10,}禁言指定群822155489指定QQ1318377582 10秒。

[全群禁言]
变量分类=QQ函数
变量名称=全群禁言	
变量格式={全群禁言,group}
变量注释=进行全群禁言，禁言后仅管理员和群主可发言。”group”可省略，默认为触发群。酷Q Air无此功能。
智能输入={全群禁言}

[全群解禁]
变量分类=QQ函数
变量名称=全群解禁	
变量格式={全群解禁,group}
变量注释=解除全群禁言。group”可省略，默认为触发群。
智能输入={全群解禁}

[撤回]
变量分类=QQ函数
变量名称=撤回	
变量格式={撤回,消息ID}
变量注释=撤回触发关键词的消息。小栗子撤回，请使用{撤回,msgID左,msgID右}，比如：{撤回,{left,{msgID},+},{right,{msgID},+}}
智能输入={撤回}

[永久踢出]
变量分类=QQ函数
变量名称=永久踢出	
变量格式={永久踢出,QQ}
变量注释=永久踢出触发关键词的群成员,不再接受入群申请。
智能输入={永久踢出,}

[消息ID]
变量分类=QQ函数
变量名称=消息ID(msgID)	
变量格式={消息ID}或{msgID}
变量注释=用于获取触发关键词的消息ID。小栗子的msgID由“+”分割为左右两部分。
智能输入={msgID}

[取陌生人信息]
变量分类=QQ函数
变量名称=取陌生人信息	
变量格式={取陌生人信息,QQ}
变量注释=获取陌生人信息，即不在群内的人员。群成员自行退群或被踢后，就成了陌生人。
智能输入={取陌生人信息,}

[当前人数]
变量分类=QQ函数
变量名称=当前人数	
变量格式={当前人数,不使用缓存}
变量注释=用于获取群当前人数。不使用缓存，可以省略。
智能输入={当前人数}
变量举例={当前人数}或{当前人数,假}表示使用缓存，这将导致信息更新不及时。{当前人数,真}表示不使用缓存，消息更新及时，但是增加了被冻结的风险。

[人数上限]
变量分类=QQ函数
变量名称=人数上限	
变量格式={人数上限}
变量注释=用于获取群人数上限。
智能输入={人数上限}

[QQ表情]
变量分类=QQ函数
变量名称=QQ表情(face)
变量格式={QQ表情,编号}或{face,编号}
变量注释=发送指定标号的表情。也可直接使用CQ码[CQ:face,id=28]，其中逗号需要处理为：[CQ:face{逗号}id=28]。
智能输入={face,}
变量举例={face,13}。

[保存图片]
变量分类=QQ函数
变量名称=保存图片
变量格式={保存图片,图片路径名称}
变量注释=用于保存用户发送的图片到指定位置并命名，返回“真”或“假”。单次或覆盖保存,可直接指定名称；多次保存可以使用：{保存图片,{应用目录}{群号}\{时间}.jpg},对文件进行命名。
智能输入={保存图片,}
变量举例={保存图片,{应用目录}{group}\哈哈.jpg}。

[加群审核]
变量分类=QQ函数
变量名称=加群审核
变量格式={加群审核,请求识别号,请求类型,处理结果,反馈原因}
变量注释=用于他人加群审核。用{请求识别号}在事件中获取请求识别号,用于审核。请求类型：申请加群、受邀加群。处理结果：同意、拒绝。反馈原因是发送给请求者的,可填可不填。此函数默认在”申请加群、他人邀请、受邀加群”事件中使用。如果在”群聊、私聊”事件中使用,请自行设置群号和QQ号,具体为：”{setv,fromGroup,加入的群号}{setv,fromQQ,拉你的QQ}”。
智能输入={加群审核,,,,}

[退出群]
变量分类=QQ函数
变量名称=退出群
变量格式={退出群,群号}
变量注释=用于退出指定群。
智能输入={退出群,}
变量举例={退出群,717141704}。{退出群,{group}}。

[加Q审核]
变量分类=QQ函数
变量名称=加Q审核
变量格式={加Q审核,请求识别号,处理结果,备注}
变量注释=用于他人添加机器人的加Q审核。用{请求识别号}在“好友添加”事件中获取,用于审核。处理结果：同意、拒绝。备注,添加后的好友备注,可省略。
智能输入={加Q审核,,,}

[改名片]
变量分类=QQ函数
变量名称=改名片
变量格式={改名片,群号,QQ,新昵称}
变量注释=用于修改群成员的名片，无返回值。
智能输入={改名片,,,}

[设头衔]
变量分类=QQ函数
变量名称=设头衔
变量格式={设头衔,群号,QQ,头衔,过期时间}
变量注释=用于修改群成员的名片。专属头衔有效期，单位为秒。如果永久有效，这里填写-1。如果要删除头衔，头衔这里填空。
智能输入={设头衔,,,,}


[设管理]
变量分类=QQ函数
变量名称=设管理
变量格式={设管理,群号,QQ,真/设置管理员 假/取消管理员}
变量注释=用于设置管理，成功返回“真”，失败返回“假”。
智能输入={设管理,,,}
变量举例={设管理,{group},{QQ},真}提升指定QQ为管理员。{设管理,{group},1318377582,假}取消1318377582的管理员身份。

[点赞]
变量分类=QQ函数
变量名称=点赞
变量格式={点赞,QQ,次数}或{点赞,QQ}
变量注释=用于点赞指定QQ号指定次数。酷Q：省略“次数”，默认点赞一次。单次点赞“次数”最多10次。契约：只能一次一次点赞，只能用{点赞,QQ}。
智能输入={点赞,,}
变量举例={点赞,{QQ}}。{点赞,{QQ},5}。





[发送语音]
变量分类=QQ函数
变量名称=发送语音
变量格式={发送语音,语音路径,silk编码/amr编码}
变量注释=用于发送语音。小栗子、先驱 需要转化编码，需要”ffmpeg.exe  silkdecode.exe  silkencode.exe”三个文件(可在小栗子官网或群文件下载”机器人平台→语音转码库”)。小栗子将这三个文件放在main\corn\，先驱放在bin\ 。”silk编码/amr编码”可省略，默认为amr编码。不能通过临时会话，给陌生人发语音。
智能输入={发送语音,}

[删除好友]
变量分类=QQ函数
变量名称=删除好友
变量格式={删除好友,QQ}
变量注释=用于删除好友。
智能输入={删除好友,}

[发送群json消息]
变量分类=QQ函数
变量名称=发送群json消息
变量格式={发送群json消息,群号,json代码}或{发送群json消息,json代码}
变量注释=发送群json消息。需要转义json格式中的“{”为$zkh，“}”为$ykh。
智能输入={发送群json消息,}

十六、酷Q函数类
[机器人消息ID]
变量分类=酷Q函数
变量名称=机器人消息ID(robotID)	
变量格式={机器人消息ID}或{robotID}
变量注释=使用{群消息,}发送消息后，{机器人消息ID}即为机器人发送该条消息的ID。{机器人消息ID}实时保存上一条{群消息,}的ID。如果多次使用{群消息,}，需要连续撤回多条机器人的消息，请逐一保存消息ID。
智能输入={robotID}

[EMOJI]
变量分类=酷Q函数
变量名称=EMOJI(emoji)	
变量格式={EMOJI,编号}或{emoji,编号}
变量注释=发送指定标号的表情。也可直接使用CQ码[CQ:emoji,id=127822]，其中逗号需要处理为：[CQ:emoji{逗号}id=127822]。
智能输入={emoji,}
变量举例={emoji,127936}。

[窗口抖动]
变量分类=酷Q函数
变量名称=窗口抖动	
变量格式={窗口抖动}
变量注释=窗口抖动,仅支持好友。
智能输入={窗口抖动}

[音乐自定义分享]
变量分类=酷Q函数
变量名称=音乐自定义分享
变量格式={音乐自定义分享,分享链接,音频链接,标题,内容,封面图片链接}
变量注释=发送音乐自定义分享(music)。“分享链接”点击分享后进入的音乐页面（如歌曲介绍页）。“音频链接”音乐的音频链接（如mp3链接）。“标题”可空，音乐的标题，建议12字以内。“内容”可空，音乐的简介，建议30字以内。“封面图片链接”可空，音乐的封面图片链接，留空则为默认图片。
智能输入={音乐自定义分享,,}

[重启酷Ｑ]
变量分类=酷Q函数
变量名称=重启酷Ｑ
变量格式={重启酷Ｑ}
变量注释=用于重启酷Ｑ，返回“开始重启”和“重启成功”。需设置该机器人的“快速登录”并选择“在目录下创建该账号的一键登录快捷方式”。如果“账号身份已过期，请重新登录”，则需手动重启酷Q。
智能输入={重启酷Ｑ}


十七、可爱猫函数类
[好友昵称]
变量分类=可爱猫函数
变量名称=好友昵称
变量格式={好友昵称}
变量注释=私聊事件中获取好友昵称。
智能输入={好友昵称}

[来源群ID]
变量分类=可爱猫函数
变量名称=来源群ID
变量格式={来源群ID}
变量注释=好友请求事件中，代表在哪个群里加你群的ID。
智能输入={来源群ID}

[推荐人ID]
变量分类=可爱猫函数
变量名称=推荐人ID
变量格式={推荐人ID}
变量注释=好友请求事件中，当type为2时，{推荐人ID}代表推荐人的id。
智能输入={推荐人ID}

[推荐人昵称]
变量分类=可爱猫函数
变量名称=推荐人昵称
变量格式={推荐人昵称}
变量注释=好友请求事件中，当type为2时，{推荐人昵称}代表推荐人昵称。
智能输入={推荐人昵称}

[申请信息]
变量分类=可爱猫函数
变量名称=申请信息
变量格式={申请信息}
变量注释=好友请求事件中，当type为2时，{推荐人昵称}代表推荐人昵称。
智能输入={申请信息}

[邀请者ID]
变量分类=可爱猫函数
变量名称=邀请者ID
变量格式={邀请者ID}
变量注释=群员增加事件中，邀请者ID。
智能输入={邀请者ID}

[邀请者昵称]
变量分类=可爱猫函数
变量名称=邀请者昵称
变量格式={邀请者昵称}
变量注释=群员增加事件中，邀请者昵称。
智能输入={邀请者昵称}

[新人ID]
变量分类=可爱猫函数
变量名称=新人ID
变量格式={新人ID}
变量注释=群员增加事件中，新人ID即入群者。
智能输入={新人ID}

[新人昵称]
变量分类=可爱猫函数
变量名称=新人昵称
变量格式={新人昵称}
变量注释=群员增加事件中，新人昵称即入群者昵称。
智能输入={新人昵称}

[群聊消息艾特]
变量分类=可爱猫函数
变量名称=群聊消息艾特
变量格式={群聊消息艾特,群ID,要艾特成员的ID,要艾特成员的名字,msg}
变量注释=发送群聊消息,并且艾特某个群成员。
智能输入={群聊消息艾特,,,,}
变量举例={群聊消息艾特,{group},{WX},{好友昵称},你好啊}

[同意好友添加]
变量分类=可爱猫函数
变量名称=同意好友添加
变量格式={同意好友添加}
变量注释=用于他人加机器人同意审核。
智能输入={同意好友添加}
十八、契约函数类
[发送网络图片]
变量分类=契约函数(小栗子适用)
变量名称=发送网络图片
变量格式={发送网络图片,图片网址URL}
变量注释=发送网络图片,请填写全网络图片的网址 。
智能输入={发送网络图片,}
[发送闪照]
变量分类=契约函数(小栗子适用)
变量名称=发送闪照
变量格式={发送闪照,图片路径}
变量注释=发送闪照,请填写图片的完全路径。
智能输入={发送闪照,}
[添加群]
变量分类=契约函数(小栗子适用)
变量名称=添加群
变量格式={添加群,群号}或{添加群,群号,附加信息}
变量注释=置添加群,不一定成功啊。
智能输入={添加群,}

十九、小栗子函数类
[送礼物]
变量分类=小栗子函数
变量名称=送礼物
变量格式={送礼物,礼物编号}
变量注释=送礼物。367告白话筒;299卡布奇诺;302猫咪手表;280牵你的手;281可爱猫咪;284神秘面具;285甜wink;286我超忙的;289快乐肥宅水;290幸运手链;313坚强;307绒绒手套; 312爱心口罩;308彩虹糖果。
智能输入={送礼物,}

[取昵称]
变量分类=小栗子函数
变量名称=取昵称
变量格式={取昵称,QQ,是否强制获取}
变量注释=可快速稳定获取指定QQ昵称。不需要区分是否在群内，是否为陌生人。“是否强制获取”默认省略。{取昵称,{QQ},假}或{取昵称,{QQ}}从缓存中取昵称。{取昵称,{QQ},真}则为不使用缓存强制刷新，请慎用。
智能输入={取昵称,}

[取身份]
变量分类=小栗子函数
变量名称=取身份
变量格式={取身份,QQ}
变量注释=可快速获取指定QQ在群内的身份。返回“群主”或“管理员”或“成员”。
智能输入={取身份,}

[发送秀图]
变量分类=小栗子函数
变量名称=发送秀图
变量格式={发送秀图,图片路径,秀图类型}
变量注释=发送秀图。秀图类型：40000普通,40001幻影,40002抖动,40003生日,40004爱你,40005征友。
智能输入={发送秀图,,}

[群名称]
变量分类=小栗子函数
变量名称=群名称
变量格式={群名称}
变量注释=获取触发群名称，比{取群名,}函数更快。
智能输入={群名称}

[群公告]
变量分类=小栗子函数
变量名称=群公告
变量格式={群公告,群号,标题,内容,图片路径,视频,弹窗展示,需要确认,置顶,发送给新成员,引导修改群昵称}
变量注释=发送群公告。“图片路径”指绝对路径；在公告当中插入图片,如果设置了[腾讯视频]参数,则不显示图片只显示视频。公告当中插入视频,只支持腾讯视频,如：https://v.qq.com/x/cover/4gl2i78zd9idpi0/j0024zknymk.html。 “弹窗展示,需要确认,置顶,发送给新成员,引导修改群昵称” 留空为假、默认为假，如需要填“真”。
智能输入={群公告,,,}

[取群成员信息V2]
变量分类=小栗子函数
变量名称=取群成员信息V2	
变量格式={取群成员信息V2,QQ}
变量注释=用于取群成员的信息。可取到：群名片、昵称、群聊等级(文本型等级,取决于群等级设置,如：冒泡)、入群时间戳、最后发言时间戳、管理权限、专属头衔。“取群成员信息V2”是直接取单个成员的信息。“取群成员信息”是通过遍历群成员获取单个成员信息。两个函数有交叉也有不同，在满足需求的情况下，请使用“取群成员信息V2”。
智能输入={取群成员信息V2,}

[群图片识别]
变量分类=小栗子函数
变量名称=群图片识别
变量格式={群图片识别}
变量注释=群图片识别。匹配图片消息请用：.*\[pic,hash=.* 正则匹配。使用百度智能云文字识别，access_token的有效期为30天，需要每30天进行定期更换。
智能输入={群图片识别}

[群聊打卡]
变量分类=小栗子函数
变量名称=群聊打卡
变量格式={群聊打卡}
变量注释=群聊打卡。
智能输入={群聊打卡}

[群聊签到]
变量分类=小栗子函数
变量名称=群聊签到
变量格式={群聊签到}
变量注释=群聊签到。
智能输入={群聊签到}

[发送图片字节集]
变量分类=小栗子函数
变量名称=发送图片字节集
变量格式={发送图片字节集,字节集变量}
变量注释=发送图片字节集。先驱适用。
智能输入={发送图片字节集,}
变量举例={读入文件,C:\Users\12761\Desktop\兔子.jpg,测试可自改}{发送图片字节集,测试可自改}




[上传群文件]
变量分类=小栗子函数
变量名称=上传群文件
变量格式={上传群文件,本地文件路径,文件夹名}
变量注释=上传群文件。上传到哪个文件夹，填文件夹名，根目录留空或填/。本命令为耗时操作，本命令不支持上百mb的文件，无权限时不执行。
智能输入={上传群文件,}

[删除群文件]
变量分类=小栗子函数
变量名称=删除群文件
变量格式={删除群文件,文件fileid,文件夹名}
变量注释=删除群文件。文件所在的文件夹名，根目录留空或填/。
智能输入={删除群文件,}

[取群文件列表]
变量分类=小栗子函数
变量名称=取群文件列表
变量格式={取群文件列表,文件夹名,群文件数据}
变量注释=取群文件列表。获得“群文件数据”数组，返回文件数目。请使用“群文件数据.fileid[1]”获取文件夹fileid或者文件fileid。请使用“群文件数据.filename[1]”获取文件夹名或文件名。请使用“群文件数据.filesize[1]”获取文件大小，文件夹时表示有多少个文件。请使用“群文件数据.filemd5[1](此变量为字节集变量)”获取文件夹时为空，部分文件类型也可能是空。请使用“群文件数据.filefromuin[1]”获取创建文件夹或上传文件的QQ。请使用“群文件数据.filefromnick[1]”获取创建文件夹或上传文件QQ的昵称。请使用“群文件数据.filetype[1]”获取1文件 2文件夹。
智能输入={取群文件列表,,}

[图片地址]
变量分类=小栗子函数
变量名称=图片地址
变量格式={图片地址}
变量注释=取图片下载地址。
智能输入={图片地址}

[双击群友头像]
变量分类=小栗子函数
变量名称=双击群友头像
变量格式={双击群友头像,QQ号}
变量注释=双击群友头像，拍一拍。
智能输入={双击群友头像,}

[分享名片]
变量分类=小栗子函数
变量名称=分享名片
变量格式={分享名片,Type,分享账号}
变量注释=名片分享。”Type”0为群分享，其他则为好友分享。”分享账号”Type为0则表示QQ号,Type为其他则表示群号。
智能输入={分享名片,,}

[图片下载地址]
变量分类=小栗子函数
变量名称=图片下载地址
变量格式={图片下载地址,图片代码}
变量注释=获取图片下载地址。支持群聊、私聊的图片、闪照代码，注意是图片代码。小栗子图片日志中的hash值。
智能输入={图片下载地址,}

[批量踢出]
变量分类=小栗子函数
变量名称=批量踢出
变量格式={批量踢出,群号,QQ号数组名,拒绝加群申请}
变量注释=批量踢出。“QQ号数组名”为添加了待踢出QQ号的数组名。“拒绝加群申请”可以省略，默认为假，不拒绝再次加群；如果为“真”，将永久踢出。
智能输入={批量踢出,,}

[上传头像]
变量分类=小栗子函数
变量名称=上传头像
变量格式={上传头像,图片绝对路径/图片字节集变量}
变量注释=给机器人上传头像。图片绝对路径，包含图片的完整路径和扩展名。图片字节集变量，可以是HTTP读文件或制图等字节集形式的图片。需要开启权限，并保存。
智能输入={上传头像,}

[修改个性签名]
变量分类=小栗子函数
变量名称=修改个性签名
变量格式={修改个性签名,签名,签名地点}
变量注释=给机器人修改个性签名。签名地点，可省略。需要开启权限，并保存。
智能输入={修改个性签名,}
变量举例={修改个性签名,兔子自定义回复}

二十、先驱函数
二十一、特别解释
1.优先级
优先级省略会默认为0,优先级数字越大代表越优先。同时触发多个回复，只处理优先级最高的。优先级相同时都会触发。使用{继续匹配}则不受优先级的限制，即使优先级低，也会触发回复。
2.特殊事件
初始化：在初次启动插件、(添加、修改、删除、导入)关键词时刷新数据，重新加载“初始化”中的内容。在本事件中加载：自定义函数、常量、写内存等。
自定义函数：此事件只识别：开关、关键词、触发事件、回复内容。在编写自定义函数事件时,使用[参数1]、[参数2]……。在自定义函数调用传参给此事件时,用“,”分割传入的参数。此事件与{def,}效果一样,是为了单独放置某个自定义函数。
预处理：在处理消息之前，先进行预处理。此事件只识别：开关、群号、机器人号、触发事件。可利用此事件做：回复控制、名单系统、群开关等。
3.酷Q事件
管理员增加：用于提升管理员时的回复,只识别：开关、群列表。
管理员减少：用于取消管理员时的回复,只识别：开关、群列表。
群员离开：用于群员自动退群时的回复,只识别：开关、群列表。
群员被踢：用于群员被管理员踢出时的回复,只识别：开关、群列表。
群员被邀：用于管理员邀请好友进群时的回复,只识别：开关、群列表。就是被管理员邀请进群以后，触发了该事件，此时可进行邀请统计（不建议做），感谢某某邀请了某某。
群员加群：用于自行申请进群,管理员同意后的回复,只识别：开关、群列表。就是有人通过群号搜索加群，进群以后触发该事件，此时可进行入群欢迎。
申请加群：用于自行申请进群时的审核（需设置为：管理员审核）,只识别：开关、群列表。{msg}在此事件中代表申请者的申请理由,{QQ}代表申请者,{group}代表申请加入的群,{请求识别号}用于加群审核函数。就是有人通过群号搜索加群，未进群时触发该事件，此时可进行入群审核。
受邀加群：用于登录号(机器人)受邀时的审核,不识别群列表。{msg}在此事件中代表申请者的申请理由,{QQ}代表申请者,{group}代表申请预拉入的群,{请求识别号}用于加群审核函数。
好友添加：用于别人添加登录号(机器人)时的审核,只识别：开关。{msg}在此事件中代表申请者的附言,{QQ}代表申请者,{请求识别号}用于加Q审核函数。
已加好友：用于好友已添加反馈,只识别：开关。{QQ}代表已添加的好友。
上传文件:用于上传文件时的回复,只识别：开关、群列表。{QQ}代表上传者，相关函数：{上传文件名}、{上传文件大小}。
禁言事件：用于群员被禁言时回复,只识别：开关、群列表。{QQ}代表被禁言者、{操作者QQ}代表禁言者、{禁言时长}代表被禁言的时间,单位为秒。若为全群禁言{QQ}为0。
解禁事件：用于群员被解禁时回复,只识别：开关、群列表。{QQ}代表被解禁者、{操作者QQ}代表解禁者。若为全群解禁{QQ}为0。
3.可爱猫事件
好友申请：用于处理他人申请加机器人为好友的处理。只识别：关键词开关机器人ID和触发事件。{WX}代表申请好友者ID；{好友昵称}代表申请好友者昵称。相关函数有：{msg}代表来源消息：打招呼(申请时的附言)；{type}代表来源类型：1群内添加、2名片推荐、18 附近、3 微信号,手机搜索添加、30 扫一扫、13 通讯录、29 摇一摇、12 QQ 号；当type为1时，{来源群ID}代表在哪个群里加你群的ID；当type为2时，{推荐人ID}代表推荐人的id、{推荐人昵称}代表推荐人的昵称。
群员增加：用于新人入群的处理。只识别：关键词开关、群列表、机器人ID、触发事件。相关函数有：{group}、{取群名}、{邀请者ID}、{邀请者昵称}、{新人昵称}
群员减少：用于群员退群的处理。只识别：关键词开关、群列表、机器人ID、触发事件。相关函数有：{group}、{取群名}、{群员ID}、{群员昵称}
4.契约事件
他人邀请：群成员邀请他人申请入群,只识别：开关。
撤回事件：对方本人或管理员撤回消息，只识别：关键词开关、群列表、机器人ID、触发事件。相关函数有：{group}、{群名称}、{QQ}、{操作者QQ}、{msg}。本人撤回消息，{QQ}与{操作者QQ}相同。










5.互联通信
本事件下，实现QQ和微信消息互通。必须在同一台电脑（服务器）登陆QQ、微信插件。
开启：在插件主界面的“设置”选择夹，选中“开启连接”，并单击“保存”按钮。
刷新：在未连接成功时，可切换可爱猫插件主界面的选择夹，用来刷新连接。
关闭：关闭插件主界面，即为退出互联通信。长期不用此功能，请取消“开启连接”。
识别：本事件只识别“触发事件”和“关键词开关”，可设置不同的关键词。
机器人：请务必在回复内容首行设置机器人账号信息，否则消息不知由哪个机器人处理。QQ插件设置方法为：{setv,QQID,3626218053}；微信插件设置方法为：{setv,robot_wxid,wxid_gj384lw9fjjr22}。
事件：可使用{var,type}获取消息事件。“群聊”、“私聊”。
消息：可使用{msg}获取消息内容。
发送者：可使用{QQ}或{WX}获取发送者。
发送群：可使用{group}或{群号}获取发送群。

PS：我觉得我写清楚了，所以不解释不讲解，请自行摸索使用。

